Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    aes.o(.text.aes_ct_keysched) refers to aes.o(.text.aes_keysched_base) for aes_keysched_base
    aes.o(.text.aes_ct_keysched) refers to aes.o(.text.aes_ct_ortho) for aes_ct_ortho
    aes.o(.ARM.exidx.text.aes_ct_keysched) refers to aes.o(.text.aes_ct_keysched) for [Anonymous Symbol]
    aes.o(.text.aes_keysched_base) refers to aes.o(.text.dec32le) for dec32le
    aes.o(.text.aes_keysched_base) refers to aes.o(.text.sub_word) for sub_word
    aes.o(.text.aes_keysched_base) refers to aes.o(.rodata.Rcon) for Rcon
    aes.o(.ARM.exidx.text.aes_keysched_base) refers to aes.o(.text.aes_keysched_base) for [Anonymous Symbol]
    aes.o(.ARM.exidx.text.aes_ct_ortho) refers to aes.o(.text.aes_ct_ortho) for [Anonymous Symbol]
    aes.o(.ARM.exidx.text.aes_ct_skey_expand) refers to aes.o(.text.aes_ct_skey_expand) for [Anonymous Symbol]
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.sbx0) for sbx0
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.sbx1) for sbx1
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.sbx2) for sbx2
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.sbx3) for sbx3
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.sbx4) for sbx4
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.sbx7) for sbx7
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.sbx6) for sbx6
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.sbx5) for sbx5
    aes.o(.text.aes_ct_bitslice_encrypt) refers to aes.o(.text.add_round_key) for add_round_key
    aes.o(.text.aes_ct_bitslice_encrypt) refers to asm.o(.text) for sboxprecom
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.online_sbx0) for online_sbx0
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.online_sbx1) for online_sbx1
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.online_sbx2) for online_sbx2
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.online_sbx3) for online_sbx3
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.online_sbx4) for online_sbx4
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.online_sbx7) for online_sbx7
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.online_sbx6) for online_sbx6
    aes.o(.text.aes_ct_bitslice_encrypt) refers to tables.o(.data.online_sbx5) for online_sbx5
    aes.o(.text.aes_ct_bitslice_encrypt) refers to aes.o(.text.shift_rows) for shift_rows
    aes.o(.ARM.exidx.text.aes_ct_bitslice_encrypt) refers to aes.o(.text.aes_ct_bitslice_encrypt) for [Anonymous Symbol]
    aes.o(.ARM.exidx.text.add_round_key) refers to aes.o(.text.add_round_key) for [Anonymous Symbol]
    aes.o(.ARM.exidx.text.shift_rows) refers to aes.o(.text.shift_rows) for [Anonymous Symbol]
    aes.o(.text.aes_ct_bitslice_invSbox) refers to aes.o(.text.aes_ct_bitslice_Sbox) for aes_ct_bitslice_Sbox
    aes.o(.ARM.exidx.text.aes_ct_bitslice_invSbox) refers to aes.o(.text.aes_ct_bitslice_invSbox) for [Anonymous Symbol]
    aes.o(.ARM.exidx.text.aes_ct_bitslice_Sbox) refers to aes.o(.text.aes_ct_bitslice_Sbox) for [Anonymous Symbol]
    aes.o(.text.AES_Setkey) refers to aes.o(.text.aes_ct_keysched) for aes_ct_keysched
    aes.o(.text.AES_Setkey) refers to aes.o(.text.aes_ct_skey_expand) for aes_ct_skey_expand
    aes.o(.ARM.exidx.text.AES_Setkey) refers to aes.o(.text.AES_Setkey) for [Anonymous Symbol]
    aes.o(.text.randomization) refers to rand.o(.text) for srand
    aes.o(.text.randomization) refers to tables.o(.data.sbx7) for sbx7
    aes.o(.text.randomization) refers to tables.o(.data.online_sbx7) for online_sbx7
    aes.o(.text.randomization) refers to tables.o(.data.sbx6) for sbx6
    aes.o(.text.randomization) refers to tables.o(.data.online_sbx6) for online_sbx6
    aes.o(.text.randomization) refers to tables.o(.data.sbx5) for sbx5
    aes.o(.text.randomization) refers to tables.o(.data.online_sbx5) for online_sbx5
    aes.o(.text.randomization) refers to tables.o(.data.sbx4) for sbx4
    aes.o(.text.randomization) refers to tables.o(.data.online_sbx4) for online_sbx4
    aes.o(.text.randomization) refers to tables.o(.data.sbx3) for sbx3
    aes.o(.text.randomization) refers to tables.o(.data.online_sbx3) for online_sbx3
    aes.o(.text.randomization) refers to tables.o(.data.sbx2) for sbx2
    aes.o(.text.randomization) refers to tables.o(.data.online_sbx2) for online_sbx2
    aes.o(.text.randomization) refers to tables.o(.data.sbx1) for sbx1
    aes.o(.text.randomization) refers to tables.o(.data.online_sbx1) for online_sbx1
    aes.o(.text.randomization) refers to tables.o(.data.sbx0) for sbx0
    aes.o(.text.randomization) refers to tables.o(.data.online_sbx0) for online_sbx0
    aes.o(.ARM.exidx.text.randomization) refers to aes.o(.text.randomization) for [Anonymous Symbol]
    aes.o(.text.de_randomization) refers to tables.o(.data.sbx7) for sbx7
    aes.o(.text.de_randomization) refers to tables.o(.data.online_sbx7) for online_sbx7
    aes.o(.text.de_randomization) refers to tables.o(.data.sbx6) for sbx6
    aes.o(.text.de_randomization) refers to tables.o(.data.online_sbx6) for online_sbx6
    aes.o(.text.de_randomization) refers to tables.o(.data.sbx5) for sbx5
    aes.o(.text.de_randomization) refers to tables.o(.data.online_sbx5) for online_sbx5
    aes.o(.text.de_randomization) refers to tables.o(.data.sbx4) for sbx4
    aes.o(.text.de_randomization) refers to tables.o(.data.online_sbx4) for online_sbx4
    aes.o(.text.de_randomization) refers to tables.o(.data.sbx3) for sbx3
    aes.o(.text.de_randomization) refers to tables.o(.data.online_sbx3) for online_sbx3
    aes.o(.text.de_randomization) refers to tables.o(.data.sbx2) for sbx2
    aes.o(.text.de_randomization) refers to tables.o(.data.online_sbx2) for online_sbx2
    aes.o(.text.de_randomization) refers to tables.o(.data.sbx1) for sbx1
    aes.o(.text.de_randomization) refers to tables.o(.data.online_sbx1) for online_sbx1
    aes.o(.text.de_randomization) refers to tables.o(.data.sbx0) for sbx0
    aes.o(.text.de_randomization) refers to tables.o(.data.online_sbx0) for online_sbx0
    aes.o(.ARM.exidx.text.de_randomization) refers to aes.o(.text.de_randomization) for [Anonymous Symbol]
    aes.o(.text.AES_Encrypt_ECB) refers to aes.o(.text.dec32le) for dec32le
    aes.o(.text.AES_Encrypt_ECB) refers to aes.o(.text.aes_ct_ortho) for aes_ct_ortho
    aes.o(.text.AES_Encrypt_ECB) refers to aes.o(.text.randomization) for randomization
    aes.o(.text.AES_Encrypt_ECB) refers to aes.o(.text.aes_ct_bitslice_encrypt) for aes_ct_bitslice_encrypt
    aes.o(.text.AES_Encrypt_ECB) refers to aes.o(.text.de_randomization) for de_randomization
    aes.o(.text.AES_Encrypt_ECB) refers to aes.o(.text.enc32le) for enc32le
    aes.o(.ARM.exidx.text.AES_Encrypt_ECB) refers to aes.o(.text.AES_Encrypt_ECB) for [Anonymous Symbol]
    aes.o(.ARM.exidx.text.dec32le) refers to aes.o(.text.dec32le) for [Anonymous Symbol]
    aes.o(.ARM.exidx.text.enc32le) refers to aes.o(.text.enc32le) for [Anonymous Symbol]
    aes.o(.text.AES_Encrypt) refers to aes.o(.text.AES_Encrypt_ECB) for AES_Encrypt_ECB
    aes.o(.ARM.exidx.text.AES_Encrypt) refers to aes.o(.text.AES_Encrypt) for [Anonymous Symbol]
    aes.o(.text.AES_KeySetup_Encrypt) refers to aes.o(.text.aes_keysched_base) for aes_keysched_base
    aes.o(.ARM.exidx.text.AES_KeySetup_Encrypt) refers to aes.o(.text.AES_KeySetup_Encrypt) for [Anonymous Symbol]
    aes.o(.text.AES_KeySetup_Decrypt) refers to aes.o(.text.AES_KeySetup_Encrypt) for AES_KeySetup_Encrypt
    aes.o(.text.AES_KeySetup_Decrypt) refers to aes.o(.text.mule) for mule
    aes.o(.text.AES_KeySetup_Decrypt) refers to aes.o(.text.mulb) for mulb
    aes.o(.text.AES_KeySetup_Decrypt) refers to aes.o(.text.muld) for muld
    aes.o(.text.AES_KeySetup_Decrypt) refers to aes.o(.text.mul9) for mul9
    aes.o(.ARM.exidx.text.AES_KeySetup_Decrypt) refers to aes.o(.text.AES_KeySetup_Decrypt) for [Anonymous Symbol]
    aes.o(.text.mule) refers to aes.o(.text.redgf256) for redgf256
    aes.o(.ARM.exidx.text.mule) refers to aes.o(.text.mule) for [Anonymous Symbol]
    aes.o(.text.mulb) refers to aes.o(.text.redgf256) for redgf256
    aes.o(.ARM.exidx.text.mulb) refers to aes.o(.text.mulb) for [Anonymous Symbol]
    aes.o(.text.muld) refers to aes.o(.text.redgf256) for redgf256
    aes.o(.ARM.exidx.text.muld) refers to aes.o(.text.muld) for [Anonymous Symbol]
    aes.o(.text.mul9) refers to aes.o(.text.redgf256) for redgf256
    aes.o(.ARM.exidx.text.mul9) refers to aes.o(.text.mul9) for [Anonymous Symbol]
    aes.o(.text.sub_word) refers to aes.o(.text.aes_ct_ortho) for aes_ct_ortho
    aes.o(.text.sub_word) refers to aes.o(.text.aes_ct_bitslice_Sbox) for aes_ct_bitslice_Sbox
    aes.o(.ARM.exidx.text.sub_word) refers to aes.o(.text.sub_word) for [Anonymous Symbol]
    aes.o(.ARM.exidx.text.redgf256) refers to aes.o(.text.redgf256) for [Anonymous Symbol]
    main.o(.text.main) refers to asm.o(.text) for sbox_test
    main.o(.text.main) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(.text.main) refers to main.o(.data.key) for key
    main.o(.text.main) refers to aes.o(.text.AES_Setkey) for AES_Setkey
    main.o(.text.main) refers to main.o(.bss.dst) for dst
    main.o(.text.main) refers to aes.o(.text.AES_Encrypt) for AES_Encrypt
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    asm.o(.text) refers to tables.o(.data.sbxtest) for sbxtest
    asm.o(.text) refers to tables.o(.data.sbytest) for sbytest
    asm.o(.text) refers to tables.o(.bss.sbttest) for sbttest
    asm.o(.text) refers to tables.o(.bss.sband0trtest) for sband0trtest
    asm.o(.text) refers to tables.o(.data.online_sbxtest) for online_sbxtest
    asm.o(.text) refers to tables.o(.data.online_sbytest) for online_sbytest
    asm.o(.text) refers to tables.o(.bss.online_sbttest) for online_sbttest
    asm.o(.text) refers to tables.o(.data.sbx3) for sbx3
    asm.o(.text) refers to tables.o(.data.sbx5) for sbx5
    asm.o(.text) refers to tables.o(.bss.sby14) for sby14
    asm.o(.text) refers to tables.o(.data.sbx0) for sbx0
    asm.o(.text) refers to tables.o(.data.sbx6) for sbx6
    asm.o(.text) refers to tables.o(.bss.sby13) for sby13
    asm.o(.text) refers to tables.o(.bss.sby12) for sby12
    asm.o(.text) refers to tables.o(.bss.sby9) for sby9
    asm.o(.text) refers to tables.o(.bss.sby8) for sby8
    asm.o(.text) refers to tables.o(.data.sbx1) for sbx1
    asm.o(.text) refers to tables.o(.data.sbx2) for sbx2
    asm.o(.text) refers to tables.o(.bss.sbt0) for sbt0
    asm.o(.text) refers to tables.o(.data.sbx7) for sbx7
    asm.o(.text) refers to tables.o(.bss.sby1) for sby1
    asm.o(.text) refers to tables.o(.bss.sby4) for sby4
    asm.o(.text) refers to tables.o(.bss.sby2) for sby2
    asm.o(.text) refers to tables.o(.bss.sby5) for sby5
    asm.o(.text) refers to tables.o(.data.sbx4) for sbx4
    asm.o(.text) refers to tables.o(.bss.sbt1) for sbt1
    asm.o(.text) refers to tables.o(.bss.sby3) for sby3
    asm.o(.text) refers to tables.o(.bss.sby15) for sby15
    asm.o(.text) refers to tables.o(.bss.sby20) for sby20
    asm.o(.text) refers to tables.o(.bss.sby6) for sby6
    asm.o(.text) refers to tables.o(.bss.sby10) for sby10
    asm.o(.text) refers to tables.o(.bss.sby11) for sby11
    asm.o(.text) refers to tables.o(.bss.sby7) for sby7
    asm.o(.text) refers to tables.o(.bss.sby17) for sby17
    asm.o(.text) refers to tables.o(.bss.sby19) for sby19
    asm.o(.text) refers to tables.o(.bss.sby16) for sby16
    asm.o(.text) refers to tables.o(.bss.sby21) for sby21
    asm.o(.text) refers to tables.o(.bss.sby18) for sby18
    asm.o(.text) refers to tables.o(.data.random_table) for random_table
    asm.o(.text) refers to tables.o(.bss.sbt2) for sbt2
    asm.o(.text) refers to tables.o(.bss.sband1tr) for sband1tr
    asm.o(.text) refers to tables.o(.bss.sbt3) for sbt3
    asm.o(.text) refers to tables.o(.bss.sband2tr) for sband2tr
    asm.o(.text) refers to tables.o(.bss.sbt5) for sbt5
    asm.o(.text) refers to tables.o(.bss.sband3tr) for sband3tr
    asm.o(.text) refers to tables.o(.bss.sbt7) for sbt7
    asm.o(.text) refers to tables.o(.bss.sband4tr) for sband4tr
    asm.o(.text) refers to tables.o(.bss.sbt8) for sbt8
    asm.o(.text) refers to tables.o(.bss.sband5tr) for sband5tr
    asm.o(.text) refers to tables.o(.bss.sbt10) for sbt10
    asm.o(.text) refers to tables.o(.bss.sband6tr) for sband6tr
    asm.o(.text) refers to tables.o(.bss.sbt12) for sbt12
    asm.o(.text) refers to tables.o(.bss.sband7tr) for sband7tr
    asm.o(.text) refers to tables.o(.bss.sbt13) for sbt13
    asm.o(.text) refers to tables.o(.bss.sband8tr) for sband8tr
    asm.o(.text) refers to tables.o(.bss.sbt4) for sbt4
    asm.o(.text) refers to tables.o(.bss.sbt6) for sbt6
    asm.o(.text) refers to tables.o(.bss.sbt9) for sbt9
    asm.o(.text) refers to tables.o(.bss.sbt11) for sbt11
    asm.o(.text) refers to tables.o(.bss.sbt14) for sbt14
    asm.o(.text) refers to tables.o(.bss.sbt17) for sbt17
    asm.o(.text) refers to tables.o(.bss.sbt19) for sbt19
    asm.o(.text) refers to tables.o(.bss.sbt20) for sbt20
    asm.o(.text) refers to tables.o(.bss.sbt21) for sbt21
    asm.o(.text) refers to tables.o(.bss.sbt23) for sbt23
    asm.o(.text) refers to tables.o(.bss.sbt15) for sbt15
    asm.o(.text) refers to tables.o(.bss.sband9tr) for sband9tr
    asm.o(.text) refers to tables.o(.bss.sbt26) for sbt26
    asm.o(.text) refers to tables.o(.bss.sband10tr) for sband10tr
    asm.o(.text) refers to tables.o(.bss.sbt16) for sbt16
    asm.o(.text) refers to tables.o(.bss.sbt18) for sbt18
    asm.o(.text) refers to tables.o(.bss.sbt24) for sbt24
    asm.o(.text) refers to tables.o(.bss.sbt30) for sbt30
    asm.o(.text) refers to tables.o(.bss.sbt22) for sbt22
    asm.o(.text) refers to tables.o(.bss.sbt25) for sbt25
    asm.o(.text) refers to tables.o(.bss.sbt27) for sbt27
    asm.o(.text) refers to tables.o(.bss.sbt31) for sbt31
    asm.o(.text) refers to tables.o(.bss.sbt28) for sbt28
    asm.o(.text) refers to tables.o(.bss.sband11tr) for sband11tr
    asm.o(.text) refers to tables.o(.bss.sbt32) for sbt32
    asm.o(.text) refers to tables.o(.bss.sband12tr) for sband12tr
    asm.o(.text) refers to tables.o(.bss.sbt29) for sbt29
    asm.o(.text) refers to tables.o(.bss.sbt33) for sbt33
    asm.o(.text) refers to tables.o(.bss.sbt34) for sbt34
    asm.o(.text) refers to tables.o(.bss.sbt35) for sbt35
    asm.o(.text) refers to tables.o(.bss.sbt42) for sbt42
    asm.o(.text) refers to tables.o(.bss.sbz14) for sbz14
    asm.o(.text) refers to tables.o(.bss.sband13tr) for sband13tr
    asm.o(.text) refers to tables.o(.bss.sbt36) for sbt36
    asm.o(.text) refers to tables.o(.bss.sband14tr) for sband14tr
    asm.o(.text) refers to tables.o(.bss.sbt37) for sbt37
    asm.o(.text) refers to tables.o(.bss.sbt38) for sbt38
    asm.o(.text) refers to tables.o(.bss.sbt39) for sbt39
    asm.o(.text) refers to tables.o(.bss.sband15tr) for sband15tr
    asm.o(.text) refers to tables.o(.bss.sbz5) for sbz5
    asm.o(.text) refers to tables.o(.bss.sband16tr) for sband16tr
    asm.o(.text) refers to tables.o(.bss.sbt44) for sbt44
    asm.o(.text) refers to tables.o(.bss.sbt40) for sbt40
    asm.o(.text) refers to tables.o(.bss.sbt41) for sbt41
    asm.o(.text) refers to tables.o(.bss.sbt43) for sbt43
    asm.o(.text) refers to tables.o(.bss.sbt45) for sbt45
    asm.o(.text) refers to tables.o(.bss.sbz0) for sbz0
    asm.o(.text) refers to tables.o(.bss.sband17tr) for sband17tr
    asm.o(.text) refers to tables.o(.bss.sbz1) for sbz1
    asm.o(.text) refers to tables.o(.bss.sband18tr) for sband18tr
    asm.o(.text) refers to tables.o(.bss.sbz2) for sbz2
    asm.o(.text) refers to tables.o(.bss.sband19tr) for sband19tr
    asm.o(.text) refers to tables.o(.bss.sbz3) for sbz3
    asm.o(.text) refers to tables.o(.bss.sband20tr) for sband20tr
    asm.o(.text) refers to tables.o(.bss.sbz4) for sbz4
    asm.o(.text) refers to tables.o(.bss.sband21tr) for sband21tr
    asm.o(.text) refers to tables.o(.bss.sbz6) for sbz6
    asm.o(.text) refers to tables.o(.bss.sband22tr) for sband22tr
    asm.o(.text) refers to tables.o(.bss.sbz7) for sbz7
    asm.o(.text) refers to tables.o(.bss.sband23tr) for sband23tr
    asm.o(.text) refers to tables.o(.bss.sbz8) for sbz8
    asm.o(.text) refers to tables.o(.bss.sband24tr) for sband24tr
    asm.o(.text) refers to tables.o(.bss.sbz9) for sbz9
    asm.o(.text) refers to tables.o(.bss.sband25tr) for sband25tr
    asm.o(.text) refers to tables.o(.bss.sbz10) for sbz10
    asm.o(.text) refers to tables.o(.bss.sband26tr) for sband26tr
    asm.o(.text) refers to tables.o(.bss.sbz11) for sbz11
    asm.o(.text) refers to tables.o(.bss.sband27tr) for sband27tr
    asm.o(.text) refers to tables.o(.bss.sbz12) for sbz12
    asm.o(.text) refers to tables.o(.bss.sband28tr) for sband28tr
    asm.o(.text) refers to tables.o(.bss.sbz13) for sbz13
    asm.o(.text) refers to tables.o(.bss.sband29tr) for sband29tr
    asm.o(.text) refers to tables.o(.bss.sbz15) for sbz15
    asm.o(.text) refers to tables.o(.bss.sband30tr) for sband30tr
    asm.o(.text) refers to tables.o(.bss.sbz16) for sbz16
    asm.o(.text) refers to tables.o(.bss.sband31tr) for sband31tr
    asm.o(.text) refers to tables.o(.bss.sbz17) for sbz17
    asm.o(.text) refers to tables.o(.bss.sband32tr) for sband32tr
    asm.o(.text) refers to tables.o(.bss.sbt46) for sbt46
    asm.o(.text) refers to tables.o(.bss.sbt55) for sbt55
    asm.o(.text) refers to tables.o(.bss.sbt52) for sbt52
    asm.o(.text) refers to tables.o(.bss.sbt54) for sbt54
    asm.o(.text) refers to tables.o(.bss.sbt58) for sbt58
    asm.o(.text) refers to tables.o(.bss.sbt59) for sbt59
    asm.o(.text) refers to tables.o(.bss.sbt64) for sbt64
    asm.o(.text) refers to tables.o(.bss.sbt47) for sbt47
    asm.o(.text) refers to tables.o(.bss.sbt49) for sbt49
    asm.o(.text) refers to tables.o(.bss.sbt63) for sbt63
    asm.o(.text) refers to tables.o(.bss.sbt66) for sbt66
    asm.o(.text) refers to tables.o(.bss.sbt62) for sbt62
    asm.o(.text) refers to tables.o(.bss.sbt53) for sbt53
    asm.o(.text) refers to tables.o(.bss.sbt50) for sbt50
    asm.o(.text) refers to tables.o(.bss.sbt57) for sbt57
    asm.o(.text) refers to tables.o(.bss.sbt60) for sbt60
    asm.o(.text) refers to tables.o(.bss.sbt61) for sbt61
    asm.o(.text) refers to tables.o(.bss.sbt65) for sbt65
    asm.o(.text) refers to tables.o(.bss.sbt51) for sbt51
    asm.o(.text) refers to tables.o(.bss.sbt67) for sbt67
    asm.o(.text) refers to tables.o(.bss.sbt48) for sbt48
    asm.o(.text) refers to tables.o(.bss.sbt56) for sbt56
    asm.o(.text) refers to tables.o(.data.online_sbx3) for online_sbx3
    asm.o(.text) refers to tables.o(.data.online_sbx5) for online_sbx5
    asm.o(.text) refers to tables.o(.bss.online_sby14) for online_sby14
    asm.o(.text) refers to tables.o(.data.online_sbx0) for online_sbx0
    asm.o(.text) refers to tables.o(.data.online_sbx6) for online_sbx6
    asm.o(.text) refers to tables.o(.bss.online_sby13) for online_sby13
    asm.o(.text) refers to tables.o(.bss.online_sby12) for online_sby12
    asm.o(.text) refers to tables.o(.bss.online_sby9) for online_sby9
    asm.o(.text) refers to tables.o(.bss.online_sby8) for online_sby8
    asm.o(.text) refers to tables.o(.data.online_sbx1) for online_sbx1
    asm.o(.text) refers to tables.o(.data.online_sbx2) for online_sbx2
    asm.o(.text) refers to tables.o(.bss.online_sbt0) for online_sbt0
    asm.o(.text) refers to tables.o(.data.online_sbx7) for online_sbx7
    asm.o(.text) refers to tables.o(.bss.online_sby1) for online_sby1
    asm.o(.text) refers to tables.o(.bss.online_sby4) for online_sby4
    asm.o(.text) refers to tables.o(.bss.online_sby2) for online_sby2
    asm.o(.text) refers to tables.o(.bss.online_sby5) for online_sby5
    asm.o(.text) refers to tables.o(.data.online_sbx4) for online_sbx4
    asm.o(.text) refers to tables.o(.bss.online_sbt1) for online_sbt1
    asm.o(.text) refers to tables.o(.bss.online_sby3) for online_sby3
    asm.o(.text) refers to tables.o(.bss.online_sby15) for online_sby15
    asm.o(.text) refers to tables.o(.bss.online_sby20) for online_sby20
    asm.o(.text) refers to tables.o(.bss.online_sby6) for online_sby6
    asm.o(.text) refers to tables.o(.bss.online_sby10) for online_sby10
    asm.o(.text) refers to tables.o(.bss.online_sby11) for online_sby11
    asm.o(.text) refers to tables.o(.bss.online_sby7) for online_sby7
    asm.o(.text) refers to tables.o(.bss.online_sby17) for online_sby17
    asm.o(.text) refers to tables.o(.bss.online_sby19) for online_sby19
    asm.o(.text) refers to tables.o(.bss.online_sby16) for online_sby16
    asm.o(.text) refers to tables.o(.bss.online_sby21) for online_sby21
    asm.o(.text) refers to tables.o(.bss.online_sby18) for online_sby18
    asm.o(.text) refers to tables.o(.bss.online_sbt2) for online_sbt2
    asm.o(.text) refers to tables.o(.bss.online_sbt3) for online_sbt3
    asm.o(.text) refers to tables.o(.bss.online_sbt5) for online_sbt5
    asm.o(.text) refers to tables.o(.bss.online_sbt7) for online_sbt7
    asm.o(.text) refers to tables.o(.bss.online_sbt8) for online_sbt8
    asm.o(.text) refers to tables.o(.bss.online_sbt10) for online_sbt10
    asm.o(.text) refers to tables.o(.bss.online_sbt12) for online_sbt12
    asm.o(.text) refers to tables.o(.bss.online_sbt13) for online_sbt13
    asm.o(.text) refers to tables.o(.bss.online_sbt4) for online_sbt4
    asm.o(.text) refers to tables.o(.bss.online_sbt6) for online_sbt6
    asm.o(.text) refers to tables.o(.bss.online_sbt9) for online_sbt9
    asm.o(.text) refers to tables.o(.bss.online_sbt11) for online_sbt11
    asm.o(.text) refers to tables.o(.bss.online_sbt14) for online_sbt14
    asm.o(.text) refers to tables.o(.bss.online_sbt17) for online_sbt17
    asm.o(.text) refers to tables.o(.bss.online_sbt19) for online_sbt19
    asm.o(.text) refers to tables.o(.bss.online_sbt20) for online_sbt20
    asm.o(.text) refers to tables.o(.bss.online_sbt21) for online_sbt21
    asm.o(.text) refers to tables.o(.bss.online_sbt23) for online_sbt23
    asm.o(.text) refers to tables.o(.bss.online_sbt15) for online_sbt15
    asm.o(.text) refers to tables.o(.bss.online_sbt26) for online_sbt26
    asm.o(.text) refers to tables.o(.bss.online_sbt16) for online_sbt16
    asm.o(.text) refers to tables.o(.bss.online_sbt18) for online_sbt18
    asm.o(.text) refers to tables.o(.bss.online_sbt24) for online_sbt24
    asm.o(.text) refers to tables.o(.bss.online_sbt30) for online_sbt30
    asm.o(.text) refers to tables.o(.bss.online_sbt22) for online_sbt22
    asm.o(.text) refers to tables.o(.bss.online_sbt25) for online_sbt25
    asm.o(.text) refers to tables.o(.bss.online_sbt27) for online_sbt27
    asm.o(.text) refers to tables.o(.bss.online_sbt31) for online_sbt31
    asm.o(.text) refers to tables.o(.bss.online_sbt28) for online_sbt28
    asm.o(.text) refers to tables.o(.bss.online_sbt32) for online_sbt32
    asm.o(.text) refers to tables.o(.bss.online_sbt29) for online_sbt29
    asm.o(.text) refers to tables.o(.bss.online_sbt33) for online_sbt33
    asm.o(.text) refers to tables.o(.bss.online_sbt34) for online_sbt34
    asm.o(.text) refers to tables.o(.bss.online_sbt35) for online_sbt35
    asm.o(.text) refers to tables.o(.bss.online_sbt42) for online_sbt42
    asm.o(.text) refers to tables.o(.bss.online_sbz14) for online_sbz14
    asm.o(.text) refers to tables.o(.bss.online_sbt36) for online_sbt36
    asm.o(.text) refers to tables.o(.bss.online_sbt37) for online_sbt37
    asm.o(.text) refers to tables.o(.bss.online_sbt38) for online_sbt38
    asm.o(.text) refers to tables.o(.bss.online_sbt39) for online_sbt39
    asm.o(.text) refers to tables.o(.bss.online_sbz5) for online_sbz5
    asm.o(.text) refers to tables.o(.bss.online_sbt44) for online_sbt44
    asm.o(.text) refers to tables.o(.bss.online_sbt40) for online_sbt40
    asm.o(.text) refers to tables.o(.bss.online_sbt41) for online_sbt41
    asm.o(.text) refers to tables.o(.bss.online_sbt43) for online_sbt43
    asm.o(.text) refers to tables.o(.bss.online_sbt45) for online_sbt45
    asm.o(.text) refers to tables.o(.bss.online_sbz0) for online_sbz0
    asm.o(.text) refers to tables.o(.bss.online_sbz1) for online_sbz1
    asm.o(.text) refers to tables.o(.bss.online_sbz2) for online_sbz2
    asm.o(.text) refers to tables.o(.bss.online_sbz3) for online_sbz3
    asm.o(.text) refers to tables.o(.bss.online_sbz4) for online_sbz4
    asm.o(.text) refers to tables.o(.bss.online_sbz6) for online_sbz6
    asm.o(.text) refers to tables.o(.bss.online_sbz7) for online_sbz7
    asm.o(.text) refers to tables.o(.bss.online_sbz8) for online_sbz8
    asm.o(.text) refers to tables.o(.bss.online_sbz9) for online_sbz9
    asm.o(.text) refers to tables.o(.bss.online_sbz10) for online_sbz10
    asm.o(.text) refers to tables.o(.bss.online_sbz11) for online_sbz11
    asm.o(.text) refers to tables.o(.bss.online_sbz12) for online_sbz12
    asm.o(.text) refers to tables.o(.bss.online_sbz13) for online_sbz13
    asm.o(.text) refers to tables.o(.bss.online_sbz15) for online_sbz15
    asm.o(.text) refers to tables.o(.bss.online_sbz16) for online_sbz16
    asm.o(.text) refers to tables.o(.bss.online_sbz17) for online_sbz17
    asm.o(.text) refers to tables.o(.bss.online_sbt46) for online_sbt46
    asm.o(.text) refers to tables.o(.bss.online_sbt55) for online_sbt55
    asm.o(.text) refers to tables.o(.bss.online_sbt52) for online_sbt52
    asm.o(.text) refers to tables.o(.bss.online_sbt54) for online_sbt54
    asm.o(.text) refers to tables.o(.bss.online_sbt58) for online_sbt58
    asm.o(.text) refers to tables.o(.bss.online_sbt59) for online_sbt59
    asm.o(.text) refers to tables.o(.bss.online_sbt64) for online_sbt64
    asm.o(.text) refers to tables.o(.bss.online_sbt47) for online_sbt47
    asm.o(.text) refers to tables.o(.bss.online_sbt49) for online_sbt49
    asm.o(.text) refers to tables.o(.bss.online_sbt63) for online_sbt63
    asm.o(.text) refers to tables.o(.bss.online_sbt66) for online_sbt66
    asm.o(.text) refers to tables.o(.bss.online_sbt62) for online_sbt62
    asm.o(.text) refers to tables.o(.bss.online_sbt53) for online_sbt53
    asm.o(.text) refers to tables.o(.bss.online_sbt50) for online_sbt50
    asm.o(.text) refers to tables.o(.bss.online_sbt57) for online_sbt57
    asm.o(.text) refers to tables.o(.bss.online_sbt60) for online_sbt60
    asm.o(.text) refers to tables.o(.bss.online_sbt61) for online_sbt61
    asm.o(.text) refers to tables.o(.bss.online_sbt65) for online_sbt65
    asm.o(.text) refers to tables.o(.bss.online_sbt51) for online_sbt51
    asm.o(.text) refers to tables.o(.bss.online_sbt67) for online_sbt67
    asm.o(.text) refers to tables.o(.bss.online_sbt48) for online_sbt48
    asm.o(.text) refers to tables.o(.bss.online_sbt56) for online_sbt56
    irq_armv7m.o(.text) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    irq_armv7m.o(.text) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for EvrRtxDelay
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.IsException) for IsException
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.ARM.exidx.text.IsException) refers to rtx_delay.o(.text.IsException) for [Anonymous Symbol]
    rtx_delay.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_delay.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for EvrRtxDelayUntil
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.IsException) for IsException
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for EvrRtxDelayStarted
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for EvrRtxDelayUntilStarted
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for EvrRtxEventFlagsNew
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsException) refers to rtx_evflags.o(.text.IsException) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_evflags.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for EvrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.isrRtxEventFlagsSet) for isrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.isrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for EvrRtxEventFlagsClear
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.EventFlagsClear) for EventFlagsClear
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for EvrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.isrRtxEventFlagsWait) for isrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.isrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for EvrRtxEventFlagsDelete
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for EvrRtxEventFlagsCreated
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsCheck) refers to rtx_evflags.o(.text.atomic_chk32_all) for atomic_chk32_all
    rtx_evflags.o(.text.EventFlagsCheck) refers to rtx_evflags.o(.text.atomic_chk32_any) for atomic_chk32_any
    rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck) refers to rtx_evflags.o(.text.EventFlagsCheck) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_chk32_all) refers to rtx_evflags.o(.text.atomic_chk32_all) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_chk32_any) refers to rtx_evflags.o(.text.atomic_chk32_any) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsId) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsSet) refers to rtx_evflags.o(.text.atomic_set32) for atomic_set32
    rtx_evflags.o(.ARM.exidx.text.EventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.osRtxObject) refers to rtx_evflags.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_set32) refers to rtx_evflags.o(.text.atomic_set32) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsClear) refers to rtx_evflags.o(.text.atomic_clr32) for atomic_clr32
    rtx_evflags.o(.ARM.exidx.text.EventFlagsClear) refers to rtx_evflags.o(.text.EventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_clr32) refers to rtx_evflags.o(.text.atomic_clr32) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for EvrRtxEventFlagsWaitPending
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_evflags.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for EvrRtxEventFlagsDestroyed
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryInit) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryAlloc) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryFree) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockInit) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockFree) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError) refers to rtx_evr.o(.text.EvrRtxKernelError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInitialize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInitialized) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetInfo) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) refers to eventrecorder.o(.text.EventRecordData) for EventRecordData
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelStart) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelUnlock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelUnlocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelRestoreLock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLockRestored) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelSuspend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelSuspended) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelResume) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelResumed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetTickCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetTickFreq) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelErrorNotify) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError) refers to rtx_evr.o(.text.EvrRtxThreadError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetId) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetState) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetStackSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetStackSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSetPriority) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetPriority) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadYield) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspended) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResume) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResumed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDetach) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDetached) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoin) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoinPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoined) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadBlocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadUnblocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPreempted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSwitched) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadExit) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadTerminate) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadEnumerate) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsSet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsClear) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsGet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWait) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError) refers to rtx_evr.o(.text.EvrRtxDelayError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelay) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayUntil) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayUntilStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayCompleted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError) refers to rtx_evr.o(.text.EvrRtxTimerError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerCallback) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStart) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStop) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStopped) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerIsRunning) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsNew) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsSet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsSetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsClear) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsClearDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsGet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWait) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError) refers to rtx_evr.o(.text.EvrRtxMutexError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexNew) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquire) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquirePending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexNotAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexRelease) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexReleased) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexGetOwner) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquire) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreRelease) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreReleased) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolFree) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePut) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePutPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueInserted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGet) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueReset) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueResetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for EvrRtxKernelErrorNotify
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_lib.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for EvrRtxKernelInitialize
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsException) refers to rtx_kernel.o(.text.IsException) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_kernel.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for EvrRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsPrivileged) for IsPrivileged
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsPrivileged) refers to rtx_kernel.o(.text.IsPrivileged) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.1) for .L.str
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsPrivileged) for IsPrivileged
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.osRtxKernelState) for osRtxKernelState
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for EvrRtxKernelStart
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for EvrRtxKernelLock
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for EvrRtxKernelUnlock
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for EvrRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for EvrRtxKernelSuspend
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for EvrRtxKernelResume
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for EvrRtxKernelInitialized
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelState) refers to rtx_kernel.o(.text.osRtxKernelState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.SVC_Setup) for SVC_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for EvrRtxKernelStarted
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.SVC_Setup) refers to rtx_kernel.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    rtx_kernel.o(.ARM.exidx.text.SVC_Setup) refers to rtx_kernel.o(.text.SVC_Setup) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to rtx_kernel.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for EvrRtxKernelLocked
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for EvrRtxKernelUnlocked
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for EvrRtxKernelLockRestored
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.KernelBlock) for KernelBlock
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for EvrRtxKernelSuspended
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.KernelBlock) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.text.GetPendSV) for GetPendSV
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.text.ClrPendSV) for ClrPendSV
    rtx_kernel.o(.ARM.exidx.text.KernelBlock) refers to rtx_kernel.o(.text.KernelBlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.GetPendSV) refers to rtx_kernel.o(.text.GetPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.ClrPendSV) refers to rtx_kernel.o(.text.ClrPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for EvrRtxKernelResumed
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.KernelUnblock) for KernelUnblock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.KernelUnblock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.KernelUnblock) refers to rtx_kernel.o(.text.SetPendSV) for SetPendSV
    rtx_kernel.o(.text.KernelUnblock) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.ARM.exidx.text.KernelUnblock) refers to rtx_kernel.o(.text.KernelUnblock) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.SetPendSV) refers to rtx_kernel.o(.text.SetPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.1) for [Anonymous Symbol]
    rtx_lib.o(.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text.osRtxKernelPreInit) refers to rtx_lib.o(.text.evr_initialize) for evr_initialize
    rtx_lib.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_lib.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_lib.o(.text.evr_initialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for EventRecorderInitialize
    rtx_lib.o(.text.evr_initialize) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    rtx_lib.o(.text.evr_initialize) refers to eventrecorder.o(.text.EventRecorderDisable) for EventRecorderDisable
    rtx_lib.o(.ARM.exidx.text.evr_initialize) refers to rtx_lib.o(.text.evr_initialize) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for EvrRtxMemoryInit
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.MemHeadPtr) refers to rtx_memory.o(.text.MemHeadPtr) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.MemBlockPtr) refers to rtx_memory.o(.text.MemBlockPtr) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for EvrRtxMemoryAlloc
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for EvrRtxMemoryFree
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.atomic_link_get) for atomic_link_get
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.atomic_inc32) for atomic_inc32
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_link_get) refers to rtx_mempool.o(.text.atomic_link_get) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_inc32) refers to rtx_mempool.o(.text.atomic_inc32) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.atomic_link_put) for atomic_link_put
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.atomic_dec32) for atomic_dec32
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_link_put) refers to rtx_mempool.o(.text.atomic_link_put) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_dec32) refers to rtx_mempool.o(.text.atomic_dec32) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for EvrRtxMemoryPoolNew
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsException) refers to rtx_mempool.o(.text.IsException) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_mempool.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for EvrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) for isrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for EvrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.isrRtxMemoryPoolFree) for isrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.isrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for EvrRtxMemoryPoolDelete
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for EvrRtxMemoryPoolCreated
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxObject) refers to rtx_mempool.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolId) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for EvrRtxMemoryPoolAllocPending
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_mempool.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for EvrRtxMemoryPoolDestroyed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueId) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for EvrRtxMessageQueueCreated
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for EvrRtxMessageQueueNew
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsException) refers to rtx_msgqueue.o(.text.IsException) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_msgqueue.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for EvrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.isrRtxMessageQueuePut) for isrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for EvrRtxMessageQueueInsertPending
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.isrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for EvrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.isrRtxMessageQueueGet) for isrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.isrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for EvrRtxMessageQueueReset
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for EvrRtxMessageQueueDelete
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.osRtxObject) refers to rtx_msgqueue.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.atomic_inc32) for atomic_inc32
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_inc32) refers to rtx_msgqueue.o(.text.atomic_inc32) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for EvrRtxMessageQueuePutPending
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.atomic_dec32_nz) for atomic_dec32_nz
    rtx_msgqueue.o(.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.atomic_wr8) for atomic_wr8
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_dec32_nz) refers to rtx_msgqueue.o(.text.atomic_dec32_nz) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_wr8) refers to rtx_msgqueue.o(.text.atomic_wr8) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for EvrRtxMessageQueueGetPending
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for EvrRtxMessageQueueResetDone
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for EvrRtxMessageQueueDestroyed
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.osRtxObject) refers to rtx_mutex.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for EvrRtxMutexNew
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsException) refers to rtx_mutex.o(.text.IsException) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_mutex.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for EvrRtxMutexAcquire
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for EvrRtxMutexRelease
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for EvrRtxMutexDelete
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for EvrRtxMutexCreated
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexId) refers to rtx_mutex.o(.text.osRtxMutexId) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for EvrRtxMutexAcquirePending
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for EvrRtxMutexNotAcquired
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for EvrRtxMutexDestroyed
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for EvrRtxSemaphoreNew
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsException) refers to rtx_semaphore.o(.text.IsException) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_semaphore.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for EvrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) for isrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for EvrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.isrRtxSemaphoreRelease) for isrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.isrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for EvrRtxSemaphoreDelete
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for EvrRtxSemaphoreCreated
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.atomic_dec16_nz) for atomic_dec16_nz
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.osRtxObject) refers to rtx_semaphore.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.atomic_dec16_nz) refers to rtx_semaphore.o(.text.atomic_dec16_nz) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreId) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for EvrRtxSemaphoreAcquirePending
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_semaphore.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_semaphore.o(.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.atomic_inc16_lt) for atomic_inc16_lt
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.atomic_inc16_lt) refers to rtx_semaphore.o(.text.atomic_inc16_lt) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for EvrRtxSemaphoreDestroyed
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxKernelGetState) refers to rtx_system.o(.text.osRtxKernelGetState) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.isr_queue_get) for isr_queue_get
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxEventFlagsObject) for osRtxEventFlagsObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxSemaphoreObject) for osRtxSemaphoreObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxMemoryPoolObject) for osRtxMemoryPoolObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxMessageObject) for osRtxMessageObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.isr_queue_get) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.atomic_dec16_nz) for atomic_dec16_nz
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.atomic_inc16_lim) for atomic_inc16_lim
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.osRtxObject) for osRtxObject
    rtx_system.o(.ARM.exidx.text.isr_queue_get) refers to rtx_system.o(.text.isr_queue_get) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxThreadObject) refers to rtx_system.o(.text.osRtxThreadObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxEventFlagsObject) refers to rtx_system.o(.text.osRtxEventFlagsObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSemaphoreObject) refers to rtx_system.o(.text.osRtxSemaphoreObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxMemoryPoolObject) refers to rtx_system.o(.text.osRtxMemoryPoolObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxMessageObject) refers to rtx_system.o(.text.osRtxMessageObject) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_system.o(.text.isr_queue_put) for isr_queue_put
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_system.o(.text.SetPendSV) for SetPendSV
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.isr_queue_put) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.isr_queue_put) refers to rtx_system.o(.text.atomic_inc16_lt) for atomic_inc16_lt
    rtx_system.o(.text.isr_queue_put) refers to rtx_system.o(.text.atomic_inc16_lim) for atomic_inc16_lim
    rtx_system.o(.ARM.exidx.text.isr_queue_put) refers to rtx_system.o(.text.isr_queue_put) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.SetPendSV) refers to rtx_system.o(.text.SetPendSV) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_dec16_nz) refers to rtx_system.o(.text.atomic_dec16_nz) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_inc16_lim) refers to rtx_system.o(.text.atomic_inc16_lim) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxObject) refers to rtx_system.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_inc16_lt) refers to rtx_system.o(.text.atomic_inc16_lt) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadObject) refers to rtx_thread.o(.text.osRtxThreadObject) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxObject) refers to rtx_thread.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxMutexObject) for osRtxMutexObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxMutexObject) refers to rtx_thread.o(.text.osRtxMutexObject) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.StackOffsetR0) for StackOffsetR0
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.StackOffsetR0) refers to rtx_thread.o(.text.StackOffsetR0) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxKernelGetState) refers to rtx_thread.o(.text.osRtxKernelGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadId) refers to rtx_thread.o(.text.osRtxThreadId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.xPSR_InitVal) for xPSR_InitVal
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for EvrRtxThreadCreated
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for EvrRtxThreadNew
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsException) refers to rtx_thread.o(.text.IsException) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_thread.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for EvrRtxThreadSetPriority
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for EvrRtxThreadYield
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for EvrRtxThreadSuspend
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for EvrRtxThreadResume
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for EvrRtxThreadDetach
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for EvrRtxThreadJoin
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for EvrRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for EvrRtxThreadTerminate
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for EvrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.isrRtxThreadFlagsSet) for isrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.isrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for EvrRtxThreadFlagsClear
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for EvrRtxThreadFlagsWait
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.xPSR_InitVal) refers to rtx_thread.o(.text.xPSR_InitVal) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.atomic_chk32_all) for atomic_chk32_all
    rtx_thread.o(.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.atomic_chk32_any) for atomic_chk32_any
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_chk32_all) refers to rtx_thread.o(.text.atomic_chk32_all) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_chk32_any) refers to rtx_thread.o(.text.atomic_chk32_any) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.osRtxThreadState) for osRtxThreadState
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadState) refers to rtx_thread.o(.text.osRtxThreadState) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for EvrRtxThreadPriorityUpdated
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.osRtxThreadPriority) for osRtxThreadPriority
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPriority) refers to rtx_thread.o(.text.osRtxThreadPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for EvrRtxThreadSuspended
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for EvrRtxThreadResumed
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for EvrRtxThreadDetached
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for EvrRtxThreadJoinPending
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSetRunning) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsSet) refers to rtx_thread.o(.text.atomic_set32) for atomic_set32
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_set32) refers to rtx_thread.o(.text.atomic_set32) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.ThreadFlagsClear) for ThreadFlagsClear
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for EvrRtxThreadFlagsClearDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsClear) refers to rtx_thread.o(.text.atomic_clr32) for atomic_clr32
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsClear) refers to rtx_thread.o(.text.ThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_clr32) refers to rtx_thread.o(.text.atomic_clr32) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for EvrRtxThreadFlagsWaitPending
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for EvrRtxThreadFlagsWaitNotCompleted
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerUnlink) for TimerUnlink
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for EvrRtxTimerCallback
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for EvrRtxTimerNew
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsException) refers to rtx_timer.o(.text.IsException) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_timer.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for EvrRtxTimerStart
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for EvrRtxTimerStop
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for EvrRtxTimerDelete
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_timer.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerUnlink) refers to rtx_timer.o(.text.TimerUnlink) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxThreadSetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxThreadSetRunning) refers to rtx_timer.o(.text.osRtxThreadSetRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for EvrRtxTimerCreated
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.osRtxTimerId) refers to rtx_timer.o(.text.osRtxTimerId) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for EvrRtxTimerStarted
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for EvrRtxTimerStopped
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for EvrRtxTimerDestroyed
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_armcm4.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_armcm4.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerSetup) refers to eventrecorder.o(.bss.SysTimerState) for SysTimerState
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.text.SysTimerIsRunning) for SysTimerIsRunning
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for osKernelGetSysTimerFreq
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for [Anonymous Symbol]
    eventrecorder.o(.text.SysTimerIsRunning) refers to eventrecorder.o(.bss.SysTimerState) for SysTimerState
    eventrecorder.o(.text.SysTimerIsRunning) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    eventrecorder.o(.ARM.exidx.text.SysTimerIsRunning) refers to eventrecorder.o(.text.SysTimerIsRunning) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.text.SysTimerIsRunning) for SysTimerIsRunning
    eventrecorder.o(.text.EventRecorderTimerGetCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for osKernelGetSysTimerCount
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderInitialize) refers to memseta.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.rodata.EventRecorderInfo) for EventRecorderInfo
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.crc16_ccitt) for crc16_ccitt
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for EventRecorderTimerSetup
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderStart) for EventRecorderStart
    eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.crc16_ccitt) refers to eventrecorder.o(.text.crc16_ccitt) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderEnable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderEnable) refers to eventrecorder.o(.text.EventRecorderEnable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.LockTS_Overflow) for LockTS_Overflow
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.UnlockTS_Overflow) for UnlockTS_Overflow
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.UpdateTS) for UpdateTS
    eventrecorder.o(.ARM.exidx.text.EventGetTS) refers to eventrecorder.o(.text.EventGetTS) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.GetRecordIndex) for GetRecordIndex
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.bss.noinit) for EventBuffer
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.LockRecord) for LockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.UnlockRecord) for UnlockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsWritten) for IncrementRecordsWritten
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsDumped) for IncrementRecordsDumped
    eventrecorder.o(.ARM.exidx.text.EventRecordItem) refers to eventrecorder.o(.text.EventRecordItem) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderStart) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderDisable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderDisable) refers to eventrecorder.o(.text.EventRecorderDisable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderStop) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderClockUpdate) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecordData) refers to memcpya.o(.text) for __aeabi_memcpy
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.ARM.exidx.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordData) for [Anonymous Symbol]
    eventrecorder.o(.text.EventCheckFilter) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.ARM.exidx.text.EventCheckFilter) refers to eventrecorder.o(.text.EventCheckFilter) for [Anonymous Symbol]
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.text.atomic_inc8) for atomic_inc8
    eventrecorder.o(.ARM.exidx.text.GetContext) refers to eventrecorder.o(.text.GetContext) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord2) refers to eventrecorder.o(.text.EventRecord2) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord4) refers to eventrecorder.o(.text.EventRecord4) for [Anonymous Symbol]
    eventrecorder.o(.text.LockTS_Overflow) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.LockTS_Overflow) refers to eventrecorder.o(.text.atomic_wr8) for atomic_wr8
    eventrecorder.o(.ARM.exidx.text.LockTS_Overflow) refers to eventrecorder.o(.text.LockTS_Overflow) for [Anonymous Symbol]
    eventrecorder.o(.text.UnlockTS_Overflow) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.UnlockTS_Overflow) refers to eventrecorder.o(.text.atomic_wr8) for atomic_wr8
    eventrecorder.o(.ARM.exidx.text.UnlockTS_Overflow) refers to eventrecorder.o(.text.UnlockTS_Overflow) for [Anonymous Symbol]
    eventrecorder.o(.text.UpdateTS) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.UpdateTS) refers to eventrecorder.o(.text.atomic_wr32) for atomic_wr32
    eventrecorder.o(.ARM.exidx.text.UpdateTS) refers to eventrecorder.o(.text.UpdateTS) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_wr8) refers to eventrecorder.o(.text.atomic_wr8) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_wr32) refers to eventrecorder.o(.text.atomic_wr32) for [Anonymous Symbol]
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.GetRecordIndex) refers to eventrecorder.o(.text.GetRecordIndex) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.LockRecord) refers to eventrecorder.o(.text.LockRecord) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.UnlockRecord) refers to eventrecorder.o(.text.UnlockRecord) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.IncrementRecordsWritten) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.IncrementRecordsDumped) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc32) refers to eventrecorder.o(.text.atomic_inc32) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc8) refers to eventrecorder.o(.text.atomic_inc8) for [Anonymous Symbol]
    eventrecorder.o(.rodata.EventRecorderInfo) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    retarget_io.o(.text.fputc) refers to stdout.o(.data) for __stdout
    retarget_io.o(.text.fputc) refers to retarget_io.o(.text.stdout_putchar) for stdout_putchar
    retarget_io.o(.ARM.exidx.text.fputc) refers to retarget_io.o(.text.fputc) for [Anonymous Symbol]
    retarget_io.o(.text.stdout_putchar) refers to retarget_io.o(.bss.stdout_putchar.index) for stdout_putchar.index
    retarget_io.o(.text.stdout_putchar) refers to retarget_io.o(.bss.stdout_putchar.buffer) for stdout_putchar.buffer
    retarget_io.o(.text.stdout_putchar) refers to eventrecorder.o(.text.EventRecordData) for EventRecordData
    retarget_io.o(.ARM.exidx.text.stdout_putchar) refers to retarget_io.o(.text.stdout_putchar) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.fgetc) refers to retarget_io.o(.text.fgetc) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.__backspace) refers to retarget_io.o(.text.__backspace) for [Anonymous Symbol]
    retarget_io.o(.text.__aeabi_assert) refers to retarget_io.o(.rodata.str1.1) for .L.str
    retarget_io.o(.text.__aeabi_assert) refers to stderr.o(.data) for __stderr
    retarget_io.o(.text.__aeabi_assert) refers to fputs.o(i.fputs) for fputs
    retarget_io.o(.text.__aeabi_assert) refers to retarget_io.o(.text.abort) for abort
    retarget_io.o(.ARM.exidx.text.__aeabi_assert) refers to retarget_io.o(.text.__aeabi_assert) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.abort) refers to retarget_io.o(.text.abort) for [Anonymous Symbol]
    startup_armcm4.o(.ARM.exidx.text.Default_Handler) refers to startup_armcm4.o(.text.Default_Handler) for [Anonymous Symbol]
    startup_armcm4.o(.text.Reset_Handler) refers to system_armcm4.o(.text.SystemInit) for SystemInit
    startup_armcm4.o(.text.Reset_Handler) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_armcm4.o(.ARM.exidx.text.Reset_Handler) refers to startup_armcm4.o(.text.Reset_Handler) for [Anonymous Symbol]
    startup_armcm4.o(.ARM.exidx.text.HardFault_Handler) refers to startup_armcm4.o(.text.HardFault_Handler) for [Anonymous Symbol]
    startup_armcm4.o(RESET) refers to startup_armcm4.o(.text.Reset_Handler) for Reset_Handler
    startup_armcm4.o(RESET) refers to startup_armcm4.o(.text.Default_Handler) for NMI_Handler
    startup_armcm4.o(RESET) refers to startup_armcm4.o(.text.HardFault_Handler) for HardFault_Handler
    startup_armcm4.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    system_armcm4.o(.text.SystemCoreClockUpdate) refers to system_armcm4.o(.data.SystemCoreClock) for SystemCoreClock
    system_armcm4.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_armcm4.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_armcm4.o(.text.SystemInit) refers to startup_armcm4.o(RESET) for __Vectors
    system_armcm4.o(.text.SystemInit) refers to system_armcm4.o(.data.SystemCoreClock) for SystemCoreClock
    system_armcm4.o(.ARM.exidx.text.SystemInit) refers to system_armcm4.o(.text.SystemInit) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry4.o(.ARM.Collect$$$$00000003) for _main_stk
    fputs.o(i.fputs) refers to retarget_io.o(.text.fputc) for fputc
    fputs_e.o(.text) refers to retarget_io.o(.text.fputc) for fputc
    rand.o(.text) refers to rand.o(.data) for .data
    entry4.o(.ARM.Collect$$$$00000003) refers to entry4.o(.ARM.Collect$$$$00002714) for __lit__00000000
    entry4.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing aes.o(.text), (0 bytes).
    Removing aes.o(.ARM.exidx.text.aes_ct_keysched), (8 bytes).
    Removing aes.o(.ARM.exidx.text.aes_keysched_base), (8 bytes).
    Removing aes.o(.ARM.exidx.text.aes_ct_ortho), (8 bytes).
    Removing aes.o(.ARM.exidx.text.aes_ct_skey_expand), (8 bytes).
    Removing aes.o(.ARM.exidx.text.aes_ct_bitslice_encrypt), (8 bytes).
    Removing aes.o(.ARM.exidx.text.add_round_key), (8 bytes).
    Removing aes.o(.ARM.exidx.text.shift_rows), (8 bytes).
    Removing aes.o(.text.aes_ct_bitslice_invSbox), (352 bytes).
    Removing aes.o(.ARM.exidx.text.aes_ct_bitslice_invSbox), (8 bytes).
    Removing aes.o(.ARM.exidx.text.aes_ct_bitslice_Sbox), (8 bytes).
    Removing aes.o(.ARM.exidx.text.AES_Setkey), (8 bytes).
    Removing aes.o(.ARM.exidx.text.randomization), (8 bytes).
    Removing aes.o(.ARM.exidx.text.de_randomization), (8 bytes).
    Removing aes.o(.ARM.exidx.text.AES_Encrypt_ECB), (8 bytes).
    Removing aes.o(.ARM.exidx.text.dec32le), (8 bytes).
    Removing aes.o(.ARM.exidx.text.enc32le), (8 bytes).
    Removing aes.o(.ARM.exidx.text.AES_Encrypt), (8 bytes).
    Removing aes.o(.text.AES_KeySetup_Encrypt), (118 bytes).
    Removing aes.o(.ARM.exidx.text.AES_KeySetup_Encrypt), (8 bytes).
    Removing aes.o(.text.AES_KeySetup_Decrypt), (426 bytes).
    Removing aes.o(.ARM.exidx.text.AES_KeySetup_Decrypt), (8 bytes).
    Removing aes.o(.text.mule), (26 bytes).
    Removing aes.o(.ARM.exidx.text.mule), (8 bytes).
    Removing aes.o(.text.mulb), (24 bytes).
    Removing aes.o(.ARM.exidx.text.mulb), (8 bytes).
    Removing aes.o(.text.muld), (24 bytes).
    Removing aes.o(.ARM.exidx.text.muld), (8 bytes).
    Removing aes.o(.text.mul9), (20 bytes).
    Removing aes.o(.ARM.exidx.text.mul9), (8 bytes).
    Removing aes.o(.ARM.exidx.text.sub_word), (8 bytes).
    Removing aes.o(.text.redgf256), (34 bytes).
    Removing aes.o(.ARM.exidx.text.redgf256), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.data.src), (16 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing tables.o(.text), (0 bytes).
    Removing tables.o(.data.gadget_x), (8 bytes).
    Removing tables.o(.data.gadget_y), (8 bytes).
    Removing tables.o(.bss.gadget_z), (8 bytes).
    Removing tables.o(.bss.gadget_x_dot), (8 bytes).
    Removing tables.o(.bss.gadget_y_dot), (8 bytes).
    Removing tables.o(.data.gadget_online_x), (4 bytes).
    Removing tables.o(.data.gadget_online_y), (4 bytes).
    Removing tables.o(.bss.gadget_online_z), (4 bytes).
    Removing tables.o(.bss.gadget_online_x_dot), (4 bytes).
    Removing tables.o(.bss.gadget_online_y_dot), (4 bytes).
    Removing tables.o(.data.matrixRx), (16 bytes).
    Removing tables.o(.data.matrixRy), (16 bytes).
    Removing tables.o(.data.matrixR), (16 bytes).
    Removing tables.o(.data.alpha), (8 bytes).
    Removing tables.o(.bss.sband0txtest), (8 bytes).
    Removing tables.o(.bss.sband0tytest), (8 bytes).
    Removing tables.o(.bss.sband0tttest), (8 bytes).
    Removing tables.o(.bss.test_random_table), (4 bytes).
    Removing tables.o(.data.AES_bitslice_const_address), (24 bytes).
    Removing tables.o(.data.round_key), (176 bytes).
    Removing tables.o(.bss.sby0), (8 bytes).
    Removing tables.o(.bss.sbs0), (8 bytes).
    Removing tables.o(.bss.sbs1), (8 bytes).
    Removing tables.o(.bss.sbs2), (8 bytes).
    Removing tables.o(.bss.sbs3), (8 bytes).
    Removing tables.o(.bss.sbs4), (8 bytes).
    Removing tables.o(.bss.sbs5), (8 bytes).
    Removing tables.o(.bss.sbs6), (8 bytes).
    Removing tables.o(.bss.sbs7), (8 bytes).
    Removing tables.o(.bss.online_sby0), (4 bytes).
    Removing tables.o(.bss.online_sbs0), (4 bytes).
    Removing tables.o(.bss.online_sbs1), (4 bytes).
    Removing tables.o(.bss.online_sbs2), (4 bytes).
    Removing tables.o(.bss.online_sbs3), (4 bytes).
    Removing tables.o(.bss.online_sbs4), (4 bytes).
    Removing tables.o(.bss.online_sbs5), (4 bytes).
    Removing tables.o(.bss.online_sbs6), (4 bytes).
    Removing tables.o(.bss.online_sbs7), (4 bytes).
    Removing tables.o(.bss.online_sbs8), (4 bytes).
    Removing tables.o(.data.PRESENT_sbx0), (8 bytes).
    Removing tables.o(.data.PRESENT_sbx1), (8 bytes).
    Removing tables.o(.data.PRESENT_sbx2), (8 bytes).
    Removing tables.o(.data.PRESENT_sbx3), (8 bytes).
    Removing tables.o(.bss.PRESENT_sby0), (8 bytes).
    Removing tables.o(.bss.PRESENT_sby1), (8 bytes).
    Removing tables.o(.bss.PRESENT_sby2), (8 bytes).
    Removing tables.o(.bss.PRESENT_sby3), (8 bytes).
    Removing tables.o(.bss.PRESENT_sbt1), (8 bytes).
    Removing tables.o(.bss.PRESENT_sbt2), (8 bytes).
    Removing tables.o(.bss.PRESENT_sbt3), (8 bytes).
    Removing tables.o(.bss.PRESENT_sbt4), (8 bytes).
    Removing tables.o(.bss.PRESENT_sbt5), (8 bytes).
    Removing tables.o(.bss.PRESENT_sbt6), (8 bytes).
    Removing tables.o(.bss.PRESENT_sbt7), (8 bytes).
    Removing tables.o(.bss.PRESENT_sbt8), (8 bytes).
    Removing tables.o(.bss.PRESENT_sbt9), (8 bytes).
    Removing tables.o(.data.PRESENT_online_sbx0), (4 bytes).
    Removing tables.o(.data.PRESENT_online_sbx1), (4 bytes).
    Removing tables.o(.data.PRESENT_online_sbx2), (4 bytes).
    Removing tables.o(.data.PRESENT_online_sbx3), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_sby0), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_sby1), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_sby2), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_sby3), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_sbt1), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_sbt2), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_sbt3), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_sbt4), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_sbt5), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_sbt6), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_sbt7), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_sbt8), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_sbt9), (4 bytes).
    Removing tables.o(.bss.SKINNY_key0), (8 bytes).
    Removing tables.o(.bss.SKINNY_key1), (8 bytes).
    Removing tables.o(.bss.SKINNY_key2), (8 bytes).
    Removing tables.o(.bss.SKINNY_key3), (8 bytes).
    Removing tables.o(.data.SKINNY_sbx0), (8 bytes).
    Removing tables.o(.data.SKINNY_sbx1), (8 bytes).
    Removing tables.o(.data.SKINNY_sbx2), (8 bytes).
    Removing tables.o(.data.SKINNY_sbx3), (8 bytes).
    Removing tables.o(.bss.SKINNY_sby0), (8 bytes).
    Removing tables.o(.bss.SKINNY_sby1), (8 bytes).
    Removing tables.o(.bss.SKINNY_sby2), (8 bytes).
    Removing tables.o(.bss.SKINNY_sby3), (8 bytes).
    Removing tables.o(.bss.SKINNY_sbm0), (8 bytes).
    Removing tables.o(.bss.SKINNY_sbm1), (8 bytes).
    Removing tables.o(.bss.SKINNY_sbm2), (8 bytes).
    Removing tables.o(.bss.SKINNY_sbm3), (8 bytes).
    Removing tables.o(.bss.SKINNY_online_key0), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_key1), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_key2), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_key3), (4 bytes).
    Removing tables.o(.data.SKINNY_online_sbx0), (4 bytes).
    Removing tables.o(.data.SKINNY_online_sbx1), (4 bytes).
    Removing tables.o(.data.SKINNY_online_sbx2), (4 bytes).
    Removing tables.o(.data.SKINNY_online_sbx3), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sbm0), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sbm1), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sbm2), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sbm3), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sby0), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sby1), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sby2), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sby3), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sbt1), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sbt2), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sbt3), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sbt4), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sbt5), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sbt6), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sbt7), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sbt8), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_sbt9), (4 bytes).
    Removing tables.o(.data.SKINNY_ART_constants_array), (62 bytes).
    Removing tables.o(.bss.t_first), (4 bytes).
    Removing tables.o(.bss.t_second), (4 bytes).
    Removing tables.o(.bss.r), (8 bytes).
    Removing tables.o(.bss.bitsliced_round_key), (352 bytes).
    Removing tables.o(.bss.sband1ty12), (8 bytes).
    Removing tables.o(.bss.sband1ty15), (8 bytes).
    Removing tables.o(.bss.sband2ty3), (8 bytes).
    Removing tables.o(.bss.sband2ty6), (8 bytes).
    Removing tables.o(.bss.sband3ty4), (8 bytes).
    Removing tables.o(.bss.sband3tx7), (8 bytes).
    Removing tables.o(.bss.sband4ty13), (8 bytes).
    Removing tables.o(.bss.sband4ty16), (8 bytes).
    Removing tables.o(.bss.sband5ty5), (8 bytes).
    Removing tables.o(.bss.sband5ty1), (8 bytes).
    Removing tables.o(.bss.sband6ty2), (8 bytes).
    Removing tables.o(.bss.sband6ty7), (8 bytes).
    Removing tables.o(.bss.sband7ty9), (8 bytes).
    Removing tables.o(.bss.sband7ty11), (8 bytes).
    Removing tables.o(.bss.sband8ty14), (8 bytes).
    Removing tables.o(.bss.sband8ty17), (8 bytes).
    Removing tables.o(.bss.sband9ty8), (8 bytes).
    Removing tables.o(.bss.sband9ty10), (8 bytes).
    Removing tables.o(.bss.sband10tt21), (8 bytes).
    Removing tables.o(.bss.sband10tt23), (8 bytes).
    Removing tables.o(.bss.sband11tt25), (8 bytes).
    Removing tables.o(.bss.sband11tt27), (8 bytes).
    Removing tables.o(.bss.sband12tt31), (8 bytes).
    Removing tables.o(.bss.sband12tt30), (8 bytes).
    Removing tables.o(.bss.sband13tt29), (8 bytes).
    Removing tables.o(.bss.sband13ty2), (8 bytes).
    Removing tables.o(.bss.sband14tt24), (8 bytes).
    Removing tables.o(.bss.sband14tt35), (8 bytes).
    Removing tables.o(.bss.sband15tt29), (8 bytes).
    Removing tables.o(.bss.sband15tt38), (8 bytes).
    Removing tables.o(.bss.sband16tt29), (8 bytes).
    Removing tables.o(.bss.sband16ty7), (8 bytes).
    Removing tables.o(.bss.sband17tt44), (8 bytes).
    Removing tables.o(.bss.sband17ty15), (8 bytes).
    Removing tables.o(.bss.sband18tt37), (8 bytes).
    Removing tables.o(.bss.sband18ty6), (8 bytes).
    Removing tables.o(.bss.sband19tt33), (8 bytes).
    Removing tables.o(.bss.sband19tx7), (8 bytes).
    Removing tables.o(.bss.sband20tt43), (8 bytes).
    Removing tables.o(.bss.sband20ty16), (8 bytes).
    Removing tables.o(.bss.sband21tt40), (8 bytes).
    Removing tables.o(.bss.sband21ty1), (8 bytes).
    Removing tables.o(.bss.sband22tt42), (8 bytes).
    Removing tables.o(.bss.sband22ty11), (8 bytes).
    Removing tables.o(.bss.sband23tt45), (8 bytes).
    Removing tables.o(.bss.sband23ty17), (8 bytes).
    Removing tables.o(.bss.sband24tt41), (8 bytes).
    Removing tables.o(.bss.sband24ty10), (8 bytes).
    Removing tables.o(.bss.sband25tt44), (8 bytes).
    Removing tables.o(.bss.sband25ty12), (8 bytes).
    Removing tables.o(.bss.sband26tt37), (8 bytes).
    Removing tables.o(.bss.sband26ty3), (8 bytes).
    Removing tables.o(.bss.sband27tt33), (8 bytes).
    Removing tables.o(.bss.sband27ty4), (8 bytes).
    Removing tables.o(.bss.sband28tt43), (8 bytes).
    Removing tables.o(.bss.sband28ty13), (8 bytes).
    Removing tables.o(.bss.sband29tt40), (8 bytes).
    Removing tables.o(.bss.sband29ty5), (8 bytes).
    Removing tables.o(.bss.sband30tt42), (8 bytes).
    Removing tables.o(.bss.sband30ty9), (8 bytes).
    Removing tables.o(.bss.sband31tt45), (8 bytes).
    Removing tables.o(.bss.sband31ty14), (8 bytes).
    Removing tables.o(.bss.sband32tt41), (8 bytes).
    Removing tables.o(.bss.sband32ty8), (8 bytes).
    Removing tables.o(.bss.after_mixcolumn0), (8 bytes).
    Removing tables.o(.bss.after_mixcolumn1), (8 bytes).
    Removing tables.o(.bss.after_mixcolumn2), (8 bytes).
    Removing tables.o(.bss.after_mixcolumn3), (8 bytes).
    Removing tables.o(.bss.after_mixcolumn4), (8 bytes).
    Removing tables.o(.bss.after_mixcolumn5), (8 bytes).
    Removing tables.o(.bss.after_mixcolumn6), (8 bytes).
    Removing tables.o(.bss.after_mixcolumn7), (8 bytes).
    Removing tables.o(.bss.after_shiftrows0), (8 bytes).
    Removing tables.o(.bss.after_shiftrows1), (8 bytes).
    Removing tables.o(.bss.after_shiftrows2), (8 bytes).
    Removing tables.o(.bss.after_shiftrows3), (8 bytes).
    Removing tables.o(.bss.after_shiftrows4), (8 bytes).
    Removing tables.o(.bss.after_shiftrows5), (8 bytes).
    Removing tables.o(.bss.after_shiftrows6), (8 bytes).
    Removing tables.o(.bss.after_shiftrows7), (8 bytes).
    Removing tables.o(.bss.online_after_shiftrows0), (4 bytes).
    Removing tables.o(.bss.online_after_shiftrows1), (4 bytes).
    Removing tables.o(.bss.online_after_shiftrows2), (4 bytes).
    Removing tables.o(.bss.online_after_shiftrows3), (4 bytes).
    Removing tables.o(.bss.online_after_shiftrows4), (4 bytes).
    Removing tables.o(.bss.online_after_shiftrows5), (4 bytes).
    Removing tables.o(.bss.online_after_shiftrows6), (4 bytes).
    Removing tables.o(.bss.online_after_shiftrows7), (4 bytes).
    Removing tables.o(.bss.online_after_mixcolumn0), (4 bytes).
    Removing tables.o(.bss.online_after_mixcolumn1), (4 bytes).
    Removing tables.o(.bss.online_after_mixcolumn2), (4 bytes).
    Removing tables.o(.bss.online_after_mixcolumn3), (4 bytes).
    Removing tables.o(.bss.online_after_mixcolumn4), (4 bytes).
    Removing tables.o(.bss.online_after_mixcolumn5), (4 bytes).
    Removing tables.o(.bss.online_after_mixcolumn6), (4 bytes).
    Removing tables.o(.bss.online_after_mixcolumn7), (4 bytes).
    Removing tables.o(.bss.PRESENT_sband1tx1), (8 bytes).
    Removing tables.o(.bss.PRESENT_sband1tt1), (8 bytes).
    Removing tables.o(.bss.PRESENT_sband1tr), (8 bytes).
    Removing tables.o(.bss.PRESENT_sband2tt1), (8 bytes).
    Removing tables.o(.bss.PRESENT_sband2tt3), (8 bytes).
    Removing tables.o(.bss.PRESENT_sband2tr), (8 bytes).
    Removing tables.o(.bss.PRESENT_sband3tx3), (8 bytes).
    Removing tables.o(.bss.PRESENT_sband3tt5), (8 bytes).
    Removing tables.o(.bss.PRESENT_sband3tr), (8 bytes).
    Removing tables.o(.bss.PRESENT_sband4tt7), (8 bytes).
    Removing tables.o(.bss.PRESENT_sband4tt6), (8 bytes).
    Removing tables.o(.bss.PRESENT_sband4tr), (8 bytes).
    Removing tables.o(.bss.PRESENT_after_linear0), (8 bytes).
    Removing tables.o(.bss.PRESENT_after_linear1), (8 bytes).
    Removing tables.o(.bss.PRESENT_after_linear2), (8 bytes).
    Removing tables.o(.bss.PRESENT_after_linear3), (8 bytes).
    Removing tables.o(.bss.PRESENT_online_after_linear0), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_after_linear1), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_after_linear2), (4 bytes).
    Removing tables.o(.bss.PRESENT_online_after_linear3), (4 bytes).
    Removing tables.o(.bss.SKINNY_sband1tx0), (8 bytes).
    Removing tables.o(.bss.SKINNY_sband1tx1), (8 bytes).
    Removing tables.o(.bss.SKINNY_sband1tr), (8 bytes).
    Removing tables.o(.bss.SKINNY_sband2tx1), (8 bytes).
    Removing tables.o(.bss.SKINNY_sband2tx2), (8 bytes).
    Removing tables.o(.bss.SKINNY_sband2tr), (8 bytes).
    Removing tables.o(.bss.SKINNY_sband3tx2), (8 bytes).
    Removing tables.o(.bss.SKINNY_sband3ty0), (8 bytes).
    Removing tables.o(.bss.SKINNY_sband3tr), (8 bytes).
    Removing tables.o(.bss.SKINNY_sband4ty0), (8 bytes).
    Removing tables.o(.bss.SKINNY_sband4ty1), (8 bytes).
    Removing tables.o(.bss.SKINNY_sband4tr), (8 bytes).
    Removing tables.o(.bss.SKINNY_after_linear0), (8 bytes).
    Removing tables.o(.bss.SKINNY_after_linear1), (8 bytes).
    Removing tables.o(.bss.SKINNY_after_linear2), (8 bytes).
    Removing tables.o(.bss.SKINNY_after_linear3), (8 bytes).
    Removing tables.o(.bss.SKINNY_online_after_linear0), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_after_linear1), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_after_linear2), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_after_linear3), (4 bytes).
    Removing tables.o(.bss.SKINNY_after_shiftrows_sby0), (8 bytes).
    Removing tables.o(.bss.SKINNY_after_shiftrows_sby1), (8 bytes).
    Removing tables.o(.bss.SKINNY_after_shiftrows_sby2), (8 bytes).
    Removing tables.o(.bss.SKINNY_after_shiftrows_sby3), (8 bytes).
    Removing tables.o(.bss.SKINNY_online_after_shiftrows_sby0), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_after_shiftrows_sby1), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_after_shiftrows_sby2), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_after_shiftrows_sby3), (4 bytes).
    Removing tables.o(.bss.SKINNY_after_mixcolumns_sby0), (8 bytes).
    Removing tables.o(.bss.SKINNY_after_mixcolumns_sby1), (8 bytes).
    Removing tables.o(.bss.SKINNY_after_mixcolumns_sby2), (8 bytes).
    Removing tables.o(.bss.SKINNY_after_mixcolumns_sby3), (8 bytes).
    Removing tables.o(.bss.SKINNY_online_after_mixcolumns_sby0), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_after_mixcolumns_sby1), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_after_mixcolumns_sby2), (4 bytes).
    Removing tables.o(.bss.SKINNY_online_after_mixcolumns_sby3), (4 bytes).
    Removing irq_armv7m.o(.rodata), (1 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.text.osDelay), (84 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.IsException), (20 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_delay.o(.text.IsIrqMasked), (46 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (84 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelay), (80 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (106 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsNew), (86 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.IsException), (20 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_evflags.o(.text.IsIrqMasked), (46 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (78 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsSet), (94 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.isrRtxEventFlagsSet), (102 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (94 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (92 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (68 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsWait), (126 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.isrRtxEventFlagsWait), (134 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (86 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsNew), (278 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsPostProcess), (92 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsCheck), (124 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_chk32_all), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_chk32_all), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_chk32_any), (52 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_chk32_any), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (68 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsId), (10 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsId), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsSet), (26 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxObject), (10 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_set32), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_set32), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsSet), (212 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsClear), (26 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_clr32), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_clr32), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsWait), (210 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (194 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text), (0 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryInit), (36 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelError), (22 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelInitialize), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelInitialized), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetInfo), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelInfoRetrieved), (64 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelStart), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelStarted), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLock), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLocked), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlock), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlocked), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelRestoreLock), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLockRestored), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspend), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspended), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResume), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResumed), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickCount), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickFreq), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadError), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadNew), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadCreated), (56 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetId), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetState), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSize), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSpace), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSetPriority), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadPriorityUpdated), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetPriority), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadYield), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspend), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspended), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResume), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetach), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetached), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoin), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoinPending), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoined), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadExit), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadTerminate), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDestroyed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetCount), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadEnumerate), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsError), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsSet), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsSetDone), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClear), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClearDone), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsGet), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWait), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted), (42 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayError), (22 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelay), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelay), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntil), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayStarted), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntilStarted), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerError), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerNew), (46 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerCreated), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStart), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStarted), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStop), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStopped), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerIsRunning), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDelete), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDestroyed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsError), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsNew), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsCreated), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSet), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSetDone), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClear), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClearDone), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGet), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWait), (42 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitPending), (42 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted), (42 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDelete), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDestroyed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexError), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexNew), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexCreated), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexAcquire), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexAcquirePending), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexAcquired), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexNotAcquired), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexRelease), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexReleased), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetOwner), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexDelete), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexDestroyed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreError), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNew), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreCreated), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquire), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquired), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreRelease), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreReleased), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetCount), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDelete), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDestroyed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolError), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolNew), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolCreated), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAlloc), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocated), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFree), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCount), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDelete), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueNew), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCount), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetSpace), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueReset), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueResetDone), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDelete), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDestroyed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.text.osRtxKernelPreInit), (2 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelInitialize), (74 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (118 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsPrivileged), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (108 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelStart), (70 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (70 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (70 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (68 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (72 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (28 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (28 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelInitialize), (760 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelState), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelStart), (218 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.SVC_Setup), (104 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing rtx_kernel.o(.text.__NVIC_GetPriorityGrouping), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (94 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (94 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (132 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (74 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.KernelBlock), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.KernelBlock), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (80 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.GetPendSV), (18 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.ClrPendSV), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.ClrPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (238 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.KernelUnblock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.KernelUnblock), (8 bytes).
    Removing rtx_kernel.o(.text.SetPendSV), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.SetPendSV), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.text.osRtxKernelPreInit), (18 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_lib.o(.text.evr_initialize), (262 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.evr_initialize), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.text.osRtxMemoryInit), (150 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.MemHeadPtr), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.MemBlockPtr), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_link_get), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_link_put), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_dec32), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (114 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.IsException), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_mempool.o(.text.IsIrqMasked), (46 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (78 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (94 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.isrRtxMemoryPoolAlloc), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (94 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.isrRtxMemoryPoolFree), (110 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (76 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (86 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (652 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxObject), (10 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolId), (10 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolId), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (154 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (158 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (224 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueId), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (114 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (78 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (68 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (68 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (68 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (76 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (86 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (86 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (68 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_dec32_nz), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_wr8), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (294 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (226 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.text.osRtxMutexOwnerRelease), (152 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osRtxObject), (10 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexNew), (86 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.IsException), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_mutex.o(.text.IsIrqMasked), (46 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (78 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexAcquire), (100 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexRelease), (86 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (78 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexDelete), (86 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexNew), (286 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (68 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.osRtxMutexId), (10 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexId), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexAcquire), (370 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexRelease), (412 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (92 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexDelete), (366 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreNew), (114 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.IsException), (20 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_semaphore.o(.text.IsIrqMasked), (46 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (78 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreAcquire), (94 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.isrRtxSemaphoreAcquire), (106 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreRelease), (78 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.isrRtxSemaphoreRelease), (112 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (72 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (68 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (86 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreNew), (332 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxSemaphorePostProcess), (62 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.text.SemaphoreTokenDecrement), (36 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxObject), (10 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_semaphore.o(.text.atomic_dec16_nz), (44 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.atomic_dec16_nz), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (68 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxSemaphoreId), (10 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreId), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreAcquire), (166 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_semaphore.o(.text.SemaphoreTokenIncrement), (46 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement), (8 bytes).
    Removing rtx_semaphore.o(.text.atomic_inc16_lt), (56 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.atomic_inc16_lt), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreRelease), (158 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (194 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxKernelGetState), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.isr_queue_get), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxThreadObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxEventFlagsObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSemaphoreObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxMemoryPoolObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxMessageObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.isr_queue_put), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.SetPendSV), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_dec16_nz), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_inc16_lim), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_inc16_lt), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxMutexObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.StackOffsetR0), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxKernelGetState), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadStartup), (150 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadId), (10 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadNew), (1010 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadNew), (114 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.IsException), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_thread.o(.text.IsIrqMasked), (46 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (78 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (58 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (78 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (78 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (100 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.osThreadExit), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (94 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.isrRtxThreadFlagsSet), (130 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.isrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (114 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.text.xPSR_InitVal), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.xPSR_InitVal), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadPostProcess), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.text.ThreadFlagsCheck), (124 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.atomic_chk32_all), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_chk32_all), (8 bytes).
    Removing rtx_thread.o(.text.atomic_chk32_any), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_chk32_any), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (182 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (160 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadPriority), (14 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (90 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (248 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (116 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (140 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (62 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadFree), (156 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (230 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadExit), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadJoinWakeup), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadSetRunning), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSetRunning), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDestroy), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (306 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (128 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (310 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.ThreadFlagsSet), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.atomic_set32), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_set32), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (210 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (94 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.ThreadFlagsClear), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.atomic_clr32), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_clr32), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (190 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (138 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.IsException), (20 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_timer.o(.text.IsIrqMasked), (46 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (78 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (100 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (86 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (78 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (86 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerUnlink), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxThreadSetRunning), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (344 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (68 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerId), (10 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerId), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (154 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (106 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (100 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (162 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (126 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (60 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (64 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.os), (1 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing eventrecorder.o(.text), (0 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerSetup), (16 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerGetFreq), (32 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.SysTimerIsRunning), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderInitialize), (506 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize), (8 bytes).
    Removing eventrecorder.o(.text.crc16_ccitt), (130 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.crc16_ccitt), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderEnable), (146 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderEnable), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventGetTS), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordItem), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStart), (74 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStart), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderDisable), (146 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderDisable), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStop), (74 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStop), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderClockUpdate), (54 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate), (8 bytes).
    Removing eventrecorder.o(.text.EventRecordData), (388 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordData), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventCheckFilter), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetContext), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord2), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord4), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.LockTS_Overflow), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UnlockTS_Overflow), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UpdateTS), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_wr8), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_wr32), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetRecordIndex), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.LockRecord), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UnlockRecord), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc8), (8 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.text.fputc), (48 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget_io.o(.text.stdout_putchar), (124 bytes).
    Removing retarget_io.o(.ARM.exidx.text.stdout_putchar), (8 bytes).
    Removing retarget_io.o(.text.fgetc), (12 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget_io.o(.text.__backspace), (12 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__backspace), (8 bytes).
    Removing retarget_io.o(.text.__aeabi_assert), (188 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing retarget_io.o(.text.abort), (4 bytes).
    Removing retarget_io.o(.ARM.exidx.text.abort), (8 bytes).
    Removing retarget_io.o(.rodata.str1.1), (39 bytes).
    Removing retarget_io.o(.bss.stdout_putchar.index), (4 bytes).
    Removing retarget_io.o(.bss.stdout_putchar.buffer), (8 bytes).
    Removing startup_armcm4.o(.text), (0 bytes).
    Removing startup_armcm4.o(.ARM.exidx.text.Default_Handler), (8 bytes).
    Removing startup_armcm4.o(.ARM.exidx.text.Reset_Handler), (8 bytes).
    Removing startup_armcm4.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing system_armcm4.o(.text), (0 bytes).
    Removing system_armcm4.o(.text.SystemCoreClockUpdate), (20 bytes).
    Removing system_armcm4.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_armcm4.o(.ARM.exidx.text.SystemInit), (8 bytes).

1268 unused section(s) (total 37733 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry4.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs_e.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stderr.o ABSOLUTE
    ../clib/microlib/stdlib/rand.c           0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    EventRecorder.c                          0x00000000   Number         0  eventrecorder.o ABSOLUTE
    FPU_USED                                 0x00000000   Number         0  irq_armv7m.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    __tagsym$$used.0                         0x00000000   Number         0  startup_armcm4.o(RESET)
    aes.c                                    0x00000000   Number         0  aes.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_evr.c                                0x00000000   Number         0  rtx_evr.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    startup_ARMCM4.c                         0x00000000   Number         0  startup_armcm4.o ABSOLUTE
    system_ARMCM4.c                          0x00000000   Number         0  system_armcm4.o ABSOLUTE
    tables.c                                 0x00000000   Number         0  tables.o ABSOLUTE
    ARMCM4                                   0x00000001   Number         0  asm.o ABSOLUTE
    _RTE_                                    0x00000001   Number         0  asm.o ABSOLUTE
    __MICROLIB                               0x00000001   Number         0  asm.o ABSOLUTE
    __RTX                                    0x00000001   Number         0  asm.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    ORDER                                    0x00000002   Number         0  asm.o ABSOLUTE
    WIDTHBYTE                                0x00000004   Number         0  asm.o ABSOLUTE
    ii                                       0x00000008   Number         0  asm.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    __UVISION_VERSION                        0x00000219   Number         0  asm.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000003c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000003                 0x000003c0   Section        4  entry4.o(.ARM.Collect$$$$00000003)
    .ARM.Collect$$$$00000004                 0x000003c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000003c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000003c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000003c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x000003d0   Data           4  entry4.o(.ARM.Collect$$$$00002714)
    .ARM.Collect$$$$0000000D                 0x000003d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000003d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002714                 0x000003d0   Section        4  entry4.o(.ARM.Collect$$$$00002714)
    [Anonymous Symbol]                       0x000003e0   Section        0  asm.o(.text)
    [Anonymous Symbol]                       0x000057ac   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x000057d4   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x000057e4   Number         0  irq_armv7m.o(.text)
    SVC_ContextSaveRegs                      0x00005808   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x00005810   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x0000581e   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x00005820   Number         0  irq_armv7m.o(.text)
    .text                                    0x00005868   Section        0  rand.o(.text)
    .text                                    0x0000588c   Section        0  memcpya.o(.text)
    .text                                    0x000058b0   Section        0  memseta.o(.text)
    .text                                    0x000058d4   Section       36  init.o(.text)
    .text                                    0x000058f8   Section        0  __dczerorl.o(.text)
    [Anonymous Symbol]                       0x00005934   Section        0  aes.o(.text.AES_Encrypt)
    [Anonymous Symbol]                       0x00005950   Section        0  aes.o(.text.AES_Encrypt_ECB)
    [Anonymous Symbol]                       0x00005a64   Section        0  aes.o(.text.AES_Setkey)
    [Anonymous Symbol]                       0x00005aac   Section        0  startup_armcm4.o(.text.Default_Handler)
    EventCheckFilter                         0x00005ab1   Thumb Code    60  eventrecorder.o(.text.EventCheckFilter)
    [Anonymous Symbol]                       0x00005ab0   Section        0  eventrecorder.o(.text.EventCheckFilter)
    EventGetTS                               0x00005aed   Thumb Code    90  eventrecorder.o(.text.EventGetTS)
    [Anonymous Symbol]                       0x00005aec   Section        0  eventrecorder.o(.text.EventGetTS)
    [Anonymous Symbol]                       0x00005b48   Section        0  eventrecorder.o(.text.EventRecord2)
    [Anonymous Symbol]                       0x00005ba4   Section        0  eventrecorder.o(.text.EventRecord4)
    EventRecordItem                          0x00005c3d   Thumb Code   254  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x00005c3c   Section        0  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x00005d3c   Section        0  eventrecorder.o(.text.EventRecorderTimerGetCount)
    [Anonymous Symbol]                       0x00005d5c   Section        0  rtx_evr.o(.text.EvrRtxDelayCompleted)
    [Anonymous Symbol]                       0x00005d78   Section        0  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    [Anonymous Symbol]                       0x00005d94   Section        0  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x00005dac   Section        0  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00005dd8   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    [Anonymous Symbol]                       0x00005df4   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    [Anonymous Symbol]                       0x00005e1c   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    [Anonymous Symbol]                       0x00005e48   Section        0  rtx_evr.o(.text.EvrRtxMemoryFree)
    [Anonymous Symbol]                       0x00005e70   Section        0  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    [Anonymous Symbol]                       0x00005e8c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    [Anonymous Symbol]                       0x00005ea8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueError)
    [Anonymous Symbol]                       0x00005ec0   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x00005eec   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    [Anonymous Symbol]                       0x00005f14   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    [Anonymous Symbol]                       0x00005f30   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    [Anonymous Symbol]                       0x00005f4c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    [Anonymous Symbol]                       0x00005f68   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    [Anonymous Symbol]                       0x00005f84   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    [Anonymous Symbol]                       0x00005fa0   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x00005fd0   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    [Anonymous Symbol]                       0x00005ff8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    [Anonymous Symbol]                       0x00006014   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    [Anonymous Symbol]                       0x00006030   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    [Anonymous Symbol]                       0x0000604c   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    [Anonymous Symbol]                       0x00006068   Section        0  rtx_evr.o(.text.EvrRtxThreadBlocked)
    [Anonymous Symbol]                       0x00006084   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    [Anonymous Symbol]                       0x000060a0   Section        0  rtx_evr.o(.text.EvrRtxThreadPreempted)
    [Anonymous Symbol]                       0x000060bc   Section        0  rtx_evr.o(.text.EvrRtxThreadSwitched)
    [Anonymous Symbol]                       0x000060d8   Section        0  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    [Anonymous Symbol]                       0x000060f4   Section        0  rtx_evr.o(.text.EvrRtxTimerCallback)
    GetContext                               0x00006111   Thumb Code    18  eventrecorder.o(.text.GetContext)
    [Anonymous Symbol]                       0x00006110   Section        0  eventrecorder.o(.text.GetContext)
    GetRecordIndex                           0x00006125   Thumb Code    18  eventrecorder.o(.text.GetRecordIndex)
    [Anonymous Symbol]                       0x00006124   Section        0  eventrecorder.o(.text.GetRecordIndex)
    [Anonymous Symbol]                       0x00006138   Section        0  startup_armcm4.o(.text.HardFault_Handler)
    IncrementRecordsDumped                   0x0000613d   Thumb Code    18  eventrecorder.o(.text.IncrementRecordsDumped)
    [Anonymous Symbol]                       0x0000613c   Section        0  eventrecorder.o(.text.IncrementRecordsDumped)
    IncrementRecordsWritten                  0x00006151   Thumb Code    18  eventrecorder.o(.text.IncrementRecordsWritten)
    [Anonymous Symbol]                       0x00006150   Section        0  eventrecorder.o(.text.IncrementRecordsWritten)
    IsException                              0x00006165   Thumb Code    20  rtx_kernel.o(.text.IsException)
    [Anonymous Symbol]                       0x00006164   Section        0  rtx_kernel.o(.text.IsException)
    IsException                              0x00006179   Thumb Code    20  rtx_msgqueue.o(.text.IsException)
    [Anonymous Symbol]                       0x00006178   Section        0  rtx_msgqueue.o(.text.IsException)
    IsIrqMasked                              0x0000618d   Thumb Code    46  rtx_kernel.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x0000618c   Section        0  rtx_kernel.o(.text.IsIrqMasked)
    IsIrqMasked                              0x000061bd   Thumb Code    46  rtx_msgqueue.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x000061bc   Section        0  rtx_msgqueue.o(.text.IsIrqMasked)
    IsPrivileged                             0x000061ed   Thumb Code    20  rtx_kernel.o(.text.IsPrivileged)
    [Anonymous Symbol]                       0x000061ec   Section        0  rtx_kernel.o(.text.IsPrivileged)
    LockRecord                               0x00006201   Thumb Code    54  eventrecorder.o(.text.LockRecord)
    [Anonymous Symbol]                       0x00006200   Section        0  eventrecorder.o(.text.LockRecord)
    LockTS_Overflow                          0x00006239   Thumb Code    18  eventrecorder.o(.text.LockTS_Overflow)
    [Anonymous Symbol]                       0x00006238   Section        0  eventrecorder.o(.text.LockTS_Overflow)
    MemBlockPtr                              0x0000624d   Thumb Code    24  rtx_memory.o(.text.MemBlockPtr)
    [Anonymous Symbol]                       0x0000624c   Section        0  rtx_memory.o(.text.MemBlockPtr)
    MemHeadPtr                               0x00006265   Thumb Code    10  rtx_memory.o(.text.MemHeadPtr)
    [Anonymous Symbol]                       0x00006264   Section        0  rtx_memory.o(.text.MemHeadPtr)
    MessageQueueGet                          0x00006271   Thumb Code    82  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x00006270   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x000062c5   Thumb Code   172  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x000062c4   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x00006371   Thumb Code    66  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x00006370   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x000063b4   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x000063c0   Section        0  os_systick.o(.text.OS_Tick_GetCount)
    [Anonymous Symbol]                       0x000063e0   Section        0  os_systick.o(.text.OS_Tick_GetInterval)
    [Anonymous Symbol]                       0x000063f0   Section        0  os_systick.o(.text.OS_Tick_GetOverflow)
    [Anonymous Symbol]                       0x00006400   Section        0  startup_armcm4.o(.text.Reset_Handler)
    SetPendSV                                0x00006409   Thumb Code    16  rtx_system.o(.text.SetPendSV)
    [Anonymous Symbol]                       0x00006408   Section        0  rtx_system.o(.text.SetPendSV)
    StackOffsetR0                            0x00006419   Thumb Code    12  rtx_thread.o(.text.StackOffsetR0)
    [Anonymous Symbol]                       0x00006418   Section        0  rtx_thread.o(.text.StackOffsetR0)
    SysTimerIsRunning                        0x00006425   Thumb Code    54  eventrecorder.o(.text.SysTimerIsRunning)
    [Anonymous Symbol]                       0x00006424   Section        0  eventrecorder.o(.text.SysTimerIsRunning)
    [Anonymous Symbol]                       0x0000645c   Section        0  system_armcm4.o(.text.SystemInit)
    TimerInsert                              0x00006485   Thumb Code   158  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x00006484   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerUnlink                              0x00006525   Thumb Code    40  rtx_timer.o(.text.TimerUnlink)
    [Anonymous Symbol]                       0x00006524   Section        0  rtx_timer.o(.text.TimerUnlink)
    UnlockRecord                             0x0000654d   Thumb Code    50  eventrecorder.o(.text.UnlockRecord)
    [Anonymous Symbol]                       0x0000654c   Section        0  eventrecorder.o(.text.UnlockRecord)
    UnlockTS_Overflow                        0x00006581   Thumb Code    18  eventrecorder.o(.text.UnlockTS_Overflow)
    [Anonymous Symbol]                       0x00006580   Section        0  eventrecorder.o(.text.UnlockTS_Overflow)
    UpdateTS                                 0x00006595   Thumb Code    26  eventrecorder.o(.text.UpdateTS)
    [Anonymous Symbol]                       0x00006594   Section        0  eventrecorder.o(.text.UpdateTS)
    add_round_key                            0x000065b1   Thumb Code   130  aes.o(.text.add_round_key)
    [Anonymous Symbol]                       0x000065b0   Section        0  aes.o(.text.add_round_key)
    aes_ct_bitslice_Sbox                     0x00006635   Thumb Code  1032  aes.o(.text.aes_ct_bitslice_Sbox)
    [Anonymous Symbol]                       0x00006634   Section        0  aes.o(.text.aes_ct_bitslice_Sbox)
    [Anonymous Symbol]                       0x00006a3c   Section        0  aes.o(.text.aes_ct_bitslice_encrypt)
    [Anonymous Symbol]                       0x00006c00   Section        0  aes.o(.text.aes_ct_keysched)
    aes_ct_ortho                             0x00006ccd   Thumb Code   680  aes.o(.text.aes_ct_ortho)
    [Anonymous Symbol]                       0x00006ccc   Section        0  aes.o(.text.aes_ct_ortho)
    [Anonymous Symbol]                       0x00006f74   Section        0  aes.o(.text.aes_ct_skey_expand)
    aes_keysched_base                        0x00006fe9   Thumb Code   306  aes.o(.text.aes_keysched_base)
    [Anonymous Symbol]                       0x00006fe8   Section        0  aes.o(.text.aes_keysched_base)
    atomic_dec16_nz                          0x0000711d   Thumb Code    44  rtx_system.o(.text.atomic_dec16_nz)
    [Anonymous Symbol]                       0x0000711c   Section        0  rtx_system.o(.text.atomic_dec16_nz)
    atomic_dec32                             0x00007149   Thumb Code    32  rtx_mempool.o(.text.atomic_dec32)
    [Anonymous Symbol]                       0x00007148   Section        0  rtx_mempool.o(.text.atomic_dec32)
    atomic_dec32_nz                          0x00007169   Thumb Code    40  rtx_msgqueue.o(.text.atomic_dec32_nz)
    [Anonymous Symbol]                       0x00007168   Section        0  rtx_msgqueue.o(.text.atomic_dec32_nz)
    atomic_inc16_lim                         0x00007191   Thumb Code    52  rtx_system.o(.text.atomic_inc16_lim)
    [Anonymous Symbol]                       0x00007190   Section        0  rtx_system.o(.text.atomic_inc16_lim)
    atomic_inc16_lt                          0x000071c5   Thumb Code    56  rtx_system.o(.text.atomic_inc16_lt)
    [Anonymous Symbol]                       0x000071c4   Section        0  rtx_system.o(.text.atomic_inc16_lt)
    atomic_inc32                             0x000071fd   Thumb Code    32  rtx_mempool.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x000071fc   Section        0  rtx_mempool.o(.text.atomic_inc32)
    atomic_inc32                             0x0000721d   Thumb Code    32  rtx_msgqueue.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x0000721c   Section        0  rtx_msgqueue.o(.text.atomic_inc32)
    atomic_inc32                             0x0000723d   Thumb Code    32  eventrecorder.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x0000723c   Section        0  eventrecorder.o(.text.atomic_inc32)
    atomic_inc8                              0x0000725d   Thumb Code    36  eventrecorder.o(.text.atomic_inc8)
    [Anonymous Symbol]                       0x0000725c   Section        0  eventrecorder.o(.text.atomic_inc8)
    atomic_link_get                          0x00007281   Thumb Code    40  rtx_mempool.o(.text.atomic_link_get)
    [Anonymous Symbol]                       0x00007280   Section        0  rtx_mempool.o(.text.atomic_link_get)
    atomic_link_put                          0x000072a9   Thumb Code    48  rtx_mempool.o(.text.atomic_link_put)
    [Anonymous Symbol]                       0x000072a8   Section        0  rtx_mempool.o(.text.atomic_link_put)
    atomic_wr32                              0x000072d9   Thumb Code    32  eventrecorder.o(.text.atomic_wr32)
    [Anonymous Symbol]                       0x000072d8   Section        0  eventrecorder.o(.text.atomic_wr32)
    atomic_wr8                               0x000072f9   Thumb Code    40  rtx_msgqueue.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x000072f8   Section        0  rtx_msgqueue.o(.text.atomic_wr8)
    atomic_wr8                               0x00007321   Thumb Code    40  eventrecorder.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x00007320   Section        0  eventrecorder.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x00007348   Section        0  aes.o(.text.de_randomization)
    dec32le                                  0x00007571   Thumb Code    16  aes.o(.text.dec32le)
    [Anonymous Symbol]                       0x00007570   Section        0  aes.o(.text.dec32le)
    enc32le                                  0x00007581   Thumb Code    44  aes.o(.text.enc32le)
    [Anonymous Symbol]                       0x00007580   Section        0  aes.o(.text.enc32le)
    isrRtxMessageQueueGet                    0x000075ad   Thumb Code   168  rtx_msgqueue.o(.text.isrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x000075ac   Section        0  rtx_msgqueue.o(.text.isrRtxMessageQueueGet)
    isrRtxMessageQueuePut                    0x00007655   Thumb Code   184  rtx_msgqueue.o(.text.isrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x00007654   Section        0  rtx_msgqueue.o(.text.isrRtxMessageQueuePut)
    isr_queue_get                            0x0000770d   Thumb Code    84  rtx_system.o(.text.isr_queue_get)
    [Anonymous Symbol]                       0x0000770c   Section        0  rtx_system.o(.text.isr_queue_get)
    isr_queue_put                            0x00007761   Thumb Code    94  rtx_system.o(.text.isr_queue_put)
    [Anonymous Symbol]                       0x00007760   Section        0  rtx_system.o(.text.isr_queue_put)
    [Anonymous Symbol]                       0x000077c0   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00007814   Section        0  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x00007858   Section        0  rtx_kernel.o(.text.osKernelGetSysTimerCount)
    [Anonymous Symbol]                       0x00007894   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x00007914   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x000079a0   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    osRtxEventFlagsObject                    0x000079d1   Thumb Code    10  rtx_system.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x000079d0   Section        0  rtx_system.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x000079dc   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelGetState                      0x000079f9   Thumb Code    12  rtx_system.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x000079f8   Section        0  rtx_system.o(.text.osRtxKernelGetState)
    osRtxKernelGetState                      0x00007a05   Thumb Code    12  rtx_thread.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x00007a04   Section        0  rtx_thread.o(.text.osRtxKernelGetState)
    osRtxKernelState                         0x00007a11   Thumb Code    12  rtx_kernel.o(.text.osRtxKernelState)
    [Anonymous Symbol]                       0x00007a10   Section        0  rtx_kernel.o(.text.osRtxKernelState)
    [Anonymous Symbol]                       0x00007a1c   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00007b68   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00007c2c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x00007c78   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x00007cdc   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMemoryPoolObject                    0x00007d75   Thumb Code    10  rtx_system.o(.text.osRtxMemoryPoolObject)
    [Anonymous Symbol]                       0x00007d74   Section        0  rtx_system.o(.text.osRtxMemoryPoolObject)
    osRtxMessageObject                       0x00007d81   Thumb Code    10  rtx_system.o(.text.osRtxMessageObject)
    [Anonymous Symbol]                       0x00007d80   Section        0  rtx_system.o(.text.osRtxMessageObject)
    osRtxMessageQueueId                      0x00007d8d   Thumb Code    10  rtx_msgqueue.o(.text.osRtxMessageQueueId)
    [Anonymous Symbol]                       0x00007d8c   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueId)
    osRtxMessageQueuePostProcess             0x00007d99   Thumb Code   324  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00007d98   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00007edc   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexObject                         0x00007f1d   Thumb Code    10  rtx_thread.o(.text.osRtxMutexObject)
    [Anonymous Symbol]                       0x00007f1c   Section        0  rtx_thread.o(.text.osRtxMutexObject)
    [Anonymous Symbol]                       0x00007f28   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxObject                              0x00007fd5   Thumb Code    10  rtx_msgqueue.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x00007fd4   Section        0  rtx_msgqueue.o(.text.osRtxObject)
    osRtxObject                              0x00007fe1   Thumb Code    10  rtx_system.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x00007fe0   Section        0  rtx_system.o(.text.osRtxObject)
    osRtxObject                              0x00007fed   Thumb Code    10  rtx_thread.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x00007fec   Section        0  rtx_thread.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x00007ff8   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x000080b0   Section        0  rtx_system.o(.text.osRtxPostProcess)
    osRtxSemaphoreObject                     0x000080f5   Thumb Code    10  rtx_system.o(.text.osRtxSemaphoreObject)
    [Anonymous Symbol]                       0x000080f4   Section        0  rtx_system.o(.text.osRtxSemaphoreObject)
    osRtxThreadBlock                         0x00008101   Thumb Code   136  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x00008100   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x00008189   Thumb Code   250  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x00008188   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x00008285   Thumb Code   156  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00008284   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00008320   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x00008470   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadGetRunning                    0x00008509   Thumb Code    12  rtx_msgqueue.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x00008508   Section        0  rtx_msgqueue.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x00008515   Thumb Code    12  rtx_thread.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x00008514   Section        0  rtx_thread.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x00008521   Thumb Code    12  rtx_timer.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x00008520   Section        0  rtx_timer.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x0000852c   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x00008564   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x000085dc   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListRoot                      0x00008611   Thumb Code    34  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x00008610   Section        0  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x00008634   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadObject                        0x0000868d   Thumb Code    10  rtx_system.o(.text.osRtxThreadObject)
    [Anonymous Symbol]                       0x0000868c   Section        0  rtx_system.o(.text.osRtxThreadObject)
    osRtxThreadObject                        0x00008699   Thumb Code    10  rtx_thread.o(.text.osRtxThreadObject)
    [Anonymous Symbol]                       0x00008698   Section        0  rtx_thread.o(.text.osRtxThreadObject)
    [Anonymous Symbol]                       0x000086a4   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x000086c4   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadSetRunning                    0x000086e9   Thumb Code    20  rtx_timer.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x000086e8   Section        0  rtx_timer.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x000086fc   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x00008738   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x0000875c   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x000087d4   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x0000881c   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x0000892c   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x0000895c   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x00008991   Thumb Code   220  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00008990   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00008a6c   Section        0  aes.o(.text.randomization)
    shift_rows                               0x00008cf9   Thumb Code   806  aes.o(.text.shift_rows)
    [Anonymous Symbol]                       0x00008cf8   Section        0  aes.o(.text.shift_rows)
    sub_word                                 0x00009021   Thumb Code    66  aes.o(.text.sub_word)
    [Anonymous Symbol]                       0x00009020   Section        0  aes.o(.text.sub_word)
    svcRtxKernelGetState                     0x00009065   Thumb Code    16  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x00009064   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetSysTimerCount             0x00009075   Thumb Code    70  rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount)
    [Anonymous Symbol]                       0x00009074   Section        0  rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount)
    svcRtxMessageQueueGet                    0x000090bd   Thumb Code   356  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x000090bc   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x00009221   Thumb Code   668  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x00009220   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x000094bd   Thumb Code   344  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x000094bc   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    i.__scatterload_copy                     0x00009614   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00009622   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00009624   Section       14  handlers.o(i.__scatterload_zeroinit)
    __tagsym$$used.0                         0x00009634   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.1                         0x000096a4   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.0                         0x000096dc   Number         0  eventrecorder.o(.rodata.EventRecorderInfo)
    Rcon                                     0x000096f4   Data          10  aes.o(.rodata.Rcon)
    [Anonymous Symbol]                       0x000096f4   Section        0  aes.o(.rodata.Rcon)
    os_idle_thread_attr                      0x00009704   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x00009704   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x00009728   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x00009728   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x00009740   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x00009740   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str                                   0x00009764   Data          11  rtx_kernel.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00009764   Section        0  rtx_kernel.o(.rodata.str1.1)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE
    _rand_state                              0xf0000000   Data           4  rand.o(.data)
    .data                                    0xf0000000   Section        4  rand.o(.data)
    SysTimerState                            0xf0001140   Data           1  eventrecorder.o(.bss.SysTimerState)
    [Anonymous Symbol]                       0xf0001140   Section        0  eventrecorder.o(.bss.SysTimerState)
    TS_OverflowLock                          0xf0001141   Data           1  eventrecorder.o(.bss.TS_OverflowLock)
    [Anonymous Symbol]                       0xf0001141   Section        0  eventrecorder.o(.bss.TS_OverflowLock)
    EventBuffer                              0xf0001180   Data        1024  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0xf0001180   Section        0  eventrecorder.o(.bss.noinit)
    EventFilter                              0xf0001580   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0xf0001600   Data          36  eventrecorder.o(.bss.noinit)
    os_isr_queue                             0xf00017d8   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0xf00017d8   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0xf0001818   Data        4096  rtx_lib.o(.bss.os)
    os_timer_mq_cb                           0xf0002818   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0xf0002818   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0xf000284c   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0xf000284c   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0xf000289c   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0xf000289c   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0xf00028e0   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0xf0002928   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0xf0002928   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0xf0002b28   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0xf0002b28   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$MICROLIB$REQ8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data         960  startup_armcm4.o(RESET)
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x000003c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000003c1   Thumb Code     0  entry4.o(.ARM.Collect$$$$00000003)
    _main_scatterload                        0x000003c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000003c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000003c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000003c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000003c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000003d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000003d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    sbox_test                                0x000003e0   Number         0  asm.o(.text)
    sboxprecom                               0x000005aa   Number         0  asm.o(.text)
    sboxonline                               0x0000313c   Number         0  asm.o(.text)
    SVC_Handler                              0x000057ad   Thumb Code   144  irq_armv7m.o(.text)
    PendSV_Handler                           0x0000583d   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x0000584d   Thumb Code    16  irq_armv7m.o(.text)
    rand                                     0x00005869   Thumb Code    20  rand.o(.text)
    srand                                    0x0000587d   Thumb Code     6  rand.o(.text)
    __aeabi_memcpy                           0x0000588d   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x0000588d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x0000588d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000058b1   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000058b1   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000058b1   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000058bf   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000058bf   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000058bf   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000058c3   Thumb Code    18  memseta.o(.text)
    __scatterload                            0x000058d5   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x000058d5   Thumb Code     0  init.o(.text)
    __decompress                             0x000058f9   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x000058f9   Thumb Code    58  __dczerorl.o(.text)
    AES_Encrypt                              0x00005935   Thumb Code    26  aes.o(.text.AES_Encrypt)
    AES_Encrypt_ECB                          0x00005951   Thumb Code   274  aes.o(.text.AES_Encrypt_ECB)
    AES_Setkey                               0x00005a65   Thumb Code    70  aes.o(.text.AES_Setkey)
    BusFault_Handler                         0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    DebugMon_Handler                         0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    Default_Handler                          0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    Interrupt0_Handler                       0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    Interrupt1_Handler                       0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    Interrupt2_Handler                       0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    Interrupt3_Handler                       0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    Interrupt4_Handler                       0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    Interrupt5_Handler                       0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    Interrupt6_Handler                       0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    Interrupt7_Handler                       0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    Interrupt8_Handler                       0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    Interrupt9_Handler                       0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    MemManage_Handler                        0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    NMI_Handler                              0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    UsageFault_Handler                       0x00005aad   Thumb Code     4  startup_armcm4.o(.text.Default_Handler)
    EventRecord2                             0x00005b49   Thumb Code    90  eventrecorder.o(.text.EventRecord2)
    EventRecord4                             0x00005ba5   Thumb Code   150  eventrecorder.o(.text.EventRecord4)
    EventRecorderTimerGetCount               0x00005d3d   Thumb Code    32  eventrecorder.o(.text.EventRecorderTimerGetCount)
    EvrRtxDelayCompleted                     0x00005d5d   Thumb Code    26  rtx_evr.o(.text.EvrRtxDelayCompleted)
    EvrRtxEventFlagsWaitTimeout              0x00005d79   Thumb Code    26  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    EvrRtxKernelErrorNotify                  0x00005d95   Thumb Code    24  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    EvrRtxMemoryAlloc                        0x00005dad   Thumb Code    42  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    EvrRtxMemoryBlockAlloc                   0x00005dd9   Thumb Code    28  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    EvrRtxMemoryBlockFree                    0x00005df5   Thumb Code    40  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    EvrRtxMemoryBlockInit                    0x00005e1d   Thumb Code    42  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    EvrRtxMemoryFree                         0x00005e49   Thumb Code    40  rtx_evr.o(.text.EvrRtxMemoryFree)
    EvrRtxMemoryPoolAllocTimeout             0x00005e71   Thumb Code    26  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    EvrRtxMessageQueueCreated                0x00005e8d   Thumb Code    28  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    EvrRtxMessageQueueError                  0x00005ea9   Thumb Code    24  rtx_evr.o(.text.EvrRtxMessageQueueError)
    EvrRtxMessageQueueGet                    0x00005ec1   Thumb Code    42  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    EvrRtxMessageQueueGetPending             0x00005eed   Thumb Code    40  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    EvrRtxMessageQueueGetTimeout             0x00005f15   Thumb Code    26  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    EvrRtxMessageQueueInsertPending          0x00005f31   Thumb Code    28  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    EvrRtxMessageQueueInserted               0x00005f4d   Thumb Code    28  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    EvrRtxMessageQueueNotInserted            0x00005f69   Thumb Code    28  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    EvrRtxMessageQueueNotRetrieved           0x00005f85   Thumb Code    28  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    EvrRtxMessageQueuePut                    0x00005fa1   Thumb Code    46  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    EvrRtxMessageQueuePutPending             0x00005fd1   Thumb Code    40  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    EvrRtxMessageQueuePutTimeout             0x00005ff9   Thumb Code    26  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    EvrRtxMessageQueueRetrieved              0x00006015   Thumb Code    28  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    EvrRtxMutexAcquireTimeout                0x00006031   Thumb Code    26  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    EvrRtxSemaphoreAcquireTimeout            0x0000604d   Thumb Code    26  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    EvrRtxThreadBlocked                      0x00006069   Thumb Code    28  rtx_evr.o(.text.EvrRtxThreadBlocked)
    EvrRtxThreadFlagsWaitTimeout             0x00006085   Thumb Code    26  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    EvrRtxThreadPreempted                    0x000060a1   Thumb Code    26  rtx_evr.o(.text.EvrRtxThreadPreempted)
    EvrRtxThreadSwitched                     0x000060bd   Thumb Code    26  rtx_evr.o(.text.EvrRtxThreadSwitched)
    EvrRtxThreadUnblocked                    0x000060d9   Thumb Code    28  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    EvrRtxTimerCallback                      0x000060f5   Thumb Code    28  rtx_evr.o(.text.EvrRtxTimerCallback)
    HardFault_Handler                        0x00006139   Thumb Code     4  startup_armcm4.o(.text.HardFault_Handler)
    OS_Tick_AcknowledgeIRQ                   0x000063b5   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_GetCount                         0x000063c1   Thumb Code    32  os_systick.o(.text.OS_Tick_GetCount)
    OS_Tick_GetInterval                      0x000063e1   Thumb Code    14  os_systick.o(.text.OS_Tick_GetInterval)
    OS_Tick_GetOverflow                      0x000063f1   Thumb Code    16  os_systick.o(.text.OS_Tick_GetOverflow)
    Reset_Handler                            0x00006401   Thumb Code     8  startup_armcm4.o(.text.Reset_Handler)
    SystemInit                               0x0000645d   Thumb Code    38  system_armcm4.o(.text.SystemInit)
    aes_ct_bitslice_encrypt                  0x00006a3d   Thumb Code   452  aes.o(.text.aes_ct_bitslice_encrypt)
    aes_ct_keysched                          0x00006c01   Thumb Code   202  aes.o(.text.aes_ct_keysched)
    aes_ct_skey_expand                       0x00006f75   Thumb Code   114  aes.o(.text.aes_ct_skey_expand)
    de_randomization                         0x00007349   Thumb Code   552  aes.o(.text.de_randomization)
    main                                     0x000077c1   Thumb Code    84  main.o(.text.main)
    osKernelGetState                         0x00007815   Thumb Code    66  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetSysTimerCount                 0x00007859   Thumb Code    58  rtx_kernel.o(.text.osKernelGetSysTimerCount)
    osMessageQueueGet                        0x00007895   Thumb Code   126  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x00007915   Thumb Code   138  rtx_msgqueue.o(.text.osMessageQueuePut)
    osRtxErrorNotify                         0x000079a1   Thumb Code    46  rtx_config.o(.text.osRtxErrorNotify)
    osRtxKernelErrorNotify                   0x000079dd   Thumb Code    28  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxMemoryAlloc                         0x00007a1d   Thumb Code   332  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00007b69   Thumb Code   194  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryPoolAlloc                     0x00007c2d   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x00007c79   Thumb Code   100  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x00007cdd   Thumb Code   152  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x00007edd   Thumb Code    62  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRestore                   0x00007f29   Thumb Code   172  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x00007ff9   Thumb Code   184  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x000080b1   Thumb Code    66  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x00008321   Thumb Code   336  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x00008471   Thumb Code   150  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x0000852d   Thumb Code    54  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x00008565   Thumb Code   118  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x000085dd   Thumb Code    50  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x00008635   Thumb Code    88  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x000086a5   Thumb Code    32  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x000086c5   Thumb Code    34  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x000086fd   Thumb Code    60  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadSwitch                        0x00008739   Thumb Code    34  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x0000875d   Thumb Code   118  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x000087d5   Thumb Code    70  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x0000881d   Thumb Code   272  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x0000892d   Thumb Code    48  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x0000895d   Thumb Code    50  rtx_timer.o(.text.osRtxTimerThread)
    randomization                            0x00008a6d   Thumb Code   650  aes.o(.text.randomization)
    __scatterload_copy                       0x00009615   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00009623   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00009625   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    osRtxConfig                              0x00009634   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x000096a4   Data          56  rtx_lib.o(.rodata)
    EventRecorderInfo                        0x000096dc   Data          24  eventrecorder.o(.rodata.EventRecorderInfo)
    osRtxUserSVC                             0x00009700   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x00009770   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00009790   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0xf0000004   Data           4  system_armcm4.o(.data.SystemCoreClock)
    key                                      0xf0000008   Data          16  main.o(.data.key)
    online_sbx0                              0xf0000018   Data           4  tables.o(.data.online_sbx0)
    online_sbx1                              0xf000001c   Data           4  tables.o(.data.online_sbx1)
    online_sbx2                              0xf0000020   Data           4  tables.o(.data.online_sbx2)
    online_sbx3                              0xf0000024   Data           4  tables.o(.data.online_sbx3)
    online_sbx4                              0xf0000028   Data           4  tables.o(.data.online_sbx4)
    online_sbx5                              0xf000002c   Data           4  tables.o(.data.online_sbx5)
    online_sbx6                              0xf0000030   Data           4  tables.o(.data.online_sbx6)
    online_sbx7                              0xf0000034   Data           4  tables.o(.data.online_sbx7)
    online_sbxtest                           0xf0000038   Data           4  tables.o(.data.online_sbxtest)
    online_sbytest                           0xf000003c   Data           4  tables.o(.data.online_sbytest)
    osRtxInfo                                0xf0000040   Data         164  rtx_kernel.o(.data.os)
    random_table                             0xf00000e4   Data        4096  tables.o(.data.random_table)
    sbx0                                     0xf00010e4   Data           8  tables.o(.data.sbx0)
    sbx1                                     0xf00010ec   Data           8  tables.o(.data.sbx1)
    sbx2                                     0xf00010f4   Data           8  tables.o(.data.sbx2)
    sbx3                                     0xf00010fc   Data           8  tables.o(.data.sbx3)
    sbx4                                     0xf0001104   Data           8  tables.o(.data.sbx4)
    sbx5                                     0xf000110c   Data           8  tables.o(.data.sbx5)
    sbx6                                     0xf0001114   Data           8  tables.o(.data.sbx6)
    sbx7                                     0xf000111c   Data           8  tables.o(.data.sbx7)
    sbxtest                                  0xf0001124   Data           8  tables.o(.data.sbxtest)
    sbytest                                  0xf000112c   Data           8  tables.o(.data.sbytest)
    dst                                      0xf0001142   Data          16  main.o(.bss.dst)
    online_sbt0                              0xf0001624   Data           4  tables.o(.bss.online_sbt0)
    online_sbt1                              0xf0001628   Data           4  tables.o(.bss.online_sbt1)
    online_sbt10                             0xf000162c   Data           4  tables.o(.bss.online_sbt10)
    online_sbt11                             0xf0001630   Data           4  tables.o(.bss.online_sbt11)
    online_sbt12                             0xf0001634   Data           4  tables.o(.bss.online_sbt12)
    online_sbt13                             0xf0001638   Data           4  tables.o(.bss.online_sbt13)
    online_sbt14                             0xf000163c   Data           4  tables.o(.bss.online_sbt14)
    online_sbt15                             0xf0001640   Data           4  tables.o(.bss.online_sbt15)
    online_sbt16                             0xf0001644   Data           4  tables.o(.bss.online_sbt16)
    online_sbt17                             0xf0001648   Data           4  tables.o(.bss.online_sbt17)
    online_sbt18                             0xf000164c   Data           4  tables.o(.bss.online_sbt18)
    online_sbt19                             0xf0001650   Data           4  tables.o(.bss.online_sbt19)
    online_sbt2                              0xf0001654   Data           4  tables.o(.bss.online_sbt2)
    online_sbt20                             0xf0001658   Data           4  tables.o(.bss.online_sbt20)
    online_sbt21                             0xf000165c   Data           4  tables.o(.bss.online_sbt21)
    online_sbt22                             0xf0001660   Data           4  tables.o(.bss.online_sbt22)
    online_sbt23                             0xf0001664   Data           4  tables.o(.bss.online_sbt23)
    online_sbt24                             0xf0001668   Data           4  tables.o(.bss.online_sbt24)
    online_sbt25                             0xf000166c   Data           4  tables.o(.bss.online_sbt25)
    online_sbt26                             0xf0001670   Data           4  tables.o(.bss.online_sbt26)
    online_sbt27                             0xf0001674   Data           4  tables.o(.bss.online_sbt27)
    online_sbt28                             0xf0001678   Data           4  tables.o(.bss.online_sbt28)
    online_sbt29                             0xf000167c   Data           4  tables.o(.bss.online_sbt29)
    online_sbt3                              0xf0001680   Data           4  tables.o(.bss.online_sbt3)
    online_sbt30                             0xf0001684   Data           4  tables.o(.bss.online_sbt30)
    online_sbt31                             0xf0001688   Data           4  tables.o(.bss.online_sbt31)
    online_sbt32                             0xf000168c   Data           4  tables.o(.bss.online_sbt32)
    online_sbt33                             0xf0001690   Data           4  tables.o(.bss.online_sbt33)
    online_sbt34                             0xf0001694   Data           4  tables.o(.bss.online_sbt34)
    online_sbt35                             0xf0001698   Data           4  tables.o(.bss.online_sbt35)
    online_sbt36                             0xf000169c   Data           4  tables.o(.bss.online_sbt36)
    online_sbt37                             0xf00016a0   Data           4  tables.o(.bss.online_sbt37)
    online_sbt38                             0xf00016a4   Data           4  tables.o(.bss.online_sbt38)
    online_sbt39                             0xf00016a8   Data           4  tables.o(.bss.online_sbt39)
    online_sbt4                              0xf00016ac   Data           4  tables.o(.bss.online_sbt4)
    online_sbt40                             0xf00016b0   Data           4  tables.o(.bss.online_sbt40)
    online_sbt41                             0xf00016b4   Data           4  tables.o(.bss.online_sbt41)
    online_sbt42                             0xf00016b8   Data           4  tables.o(.bss.online_sbt42)
    online_sbt43                             0xf00016bc   Data           4  tables.o(.bss.online_sbt43)
    online_sbt44                             0xf00016c0   Data           4  tables.o(.bss.online_sbt44)
    online_sbt45                             0xf00016c4   Data           4  tables.o(.bss.online_sbt45)
    online_sbt46                             0xf00016c8   Data           4  tables.o(.bss.online_sbt46)
    online_sbt47                             0xf00016cc   Data           4  tables.o(.bss.online_sbt47)
    online_sbt48                             0xf00016d0   Data           4  tables.o(.bss.online_sbt48)
    online_sbt49                             0xf00016d4   Data           4  tables.o(.bss.online_sbt49)
    online_sbt5                              0xf00016d8   Data           4  tables.o(.bss.online_sbt5)
    online_sbt50                             0xf00016dc   Data           4  tables.o(.bss.online_sbt50)
    online_sbt51                             0xf00016e0   Data           4  tables.o(.bss.online_sbt51)
    online_sbt52                             0xf00016e4   Data           4  tables.o(.bss.online_sbt52)
    online_sbt53                             0xf00016e8   Data           4  tables.o(.bss.online_sbt53)
    online_sbt54                             0xf00016ec   Data           4  tables.o(.bss.online_sbt54)
    online_sbt55                             0xf00016f0   Data           4  tables.o(.bss.online_sbt55)
    online_sbt56                             0xf00016f4   Data           4  tables.o(.bss.online_sbt56)
    online_sbt57                             0xf00016f8   Data           4  tables.o(.bss.online_sbt57)
    online_sbt58                             0xf00016fc   Data           4  tables.o(.bss.online_sbt58)
    online_sbt59                             0xf0001700   Data           4  tables.o(.bss.online_sbt59)
    online_sbt6                              0xf0001704   Data           4  tables.o(.bss.online_sbt6)
    online_sbt60                             0xf0001708   Data           4  tables.o(.bss.online_sbt60)
    online_sbt61                             0xf000170c   Data           4  tables.o(.bss.online_sbt61)
    online_sbt62                             0xf0001710   Data           4  tables.o(.bss.online_sbt62)
    online_sbt63                             0xf0001714   Data           4  tables.o(.bss.online_sbt63)
    online_sbt64                             0xf0001718   Data           4  tables.o(.bss.online_sbt64)
    online_sbt65                             0xf000171c   Data           4  tables.o(.bss.online_sbt65)
    online_sbt66                             0xf0001720   Data           4  tables.o(.bss.online_sbt66)
    online_sbt67                             0xf0001724   Data           4  tables.o(.bss.online_sbt67)
    online_sbt7                              0xf0001728   Data           4  tables.o(.bss.online_sbt7)
    online_sbt8                              0xf000172c   Data           4  tables.o(.bss.online_sbt8)
    online_sbt9                              0xf0001730   Data           4  tables.o(.bss.online_sbt9)
    online_sbttest                           0xf0001734   Data           4  tables.o(.bss.online_sbttest)
    online_sby1                              0xf0001738   Data           4  tables.o(.bss.online_sby1)
    online_sby10                             0xf000173c   Data           4  tables.o(.bss.online_sby10)
    online_sby11                             0xf0001740   Data           4  tables.o(.bss.online_sby11)
    online_sby12                             0xf0001744   Data           4  tables.o(.bss.online_sby12)
    online_sby13                             0xf0001748   Data           4  tables.o(.bss.online_sby13)
    online_sby14                             0xf000174c   Data           4  tables.o(.bss.online_sby14)
    online_sby15                             0xf0001750   Data           4  tables.o(.bss.online_sby15)
    online_sby16                             0xf0001754   Data           4  tables.o(.bss.online_sby16)
    online_sby17                             0xf0001758   Data           4  tables.o(.bss.online_sby17)
    online_sby18                             0xf000175c   Data           4  tables.o(.bss.online_sby18)
    online_sby19                             0xf0001760   Data           4  tables.o(.bss.online_sby19)
    online_sby2                              0xf0001764   Data           4  tables.o(.bss.online_sby2)
    online_sby20                             0xf0001768   Data           4  tables.o(.bss.online_sby20)
    online_sby21                             0xf000176c   Data           4  tables.o(.bss.online_sby21)
    online_sby3                              0xf0001770   Data           4  tables.o(.bss.online_sby3)
    online_sby4                              0xf0001774   Data           4  tables.o(.bss.online_sby4)
    online_sby5                              0xf0001778   Data           4  tables.o(.bss.online_sby5)
    online_sby6                              0xf000177c   Data           4  tables.o(.bss.online_sby6)
    online_sby7                              0xf0001780   Data           4  tables.o(.bss.online_sby7)
    online_sby8                              0xf0001784   Data           4  tables.o(.bss.online_sby8)
    online_sby9                              0xf0001788   Data           4  tables.o(.bss.online_sby9)
    online_sbz0                              0xf000178c   Data           4  tables.o(.bss.online_sbz0)
    online_sbz1                              0xf0001790   Data           4  tables.o(.bss.online_sbz1)
    online_sbz10                             0xf0001794   Data           4  tables.o(.bss.online_sbz10)
    online_sbz11                             0xf0001798   Data           4  tables.o(.bss.online_sbz11)
    online_sbz12                             0xf000179c   Data           4  tables.o(.bss.online_sbz12)
    online_sbz13                             0xf00017a0   Data           4  tables.o(.bss.online_sbz13)
    online_sbz14                             0xf00017a4   Data           4  tables.o(.bss.online_sbz14)
    online_sbz15                             0xf00017a8   Data           4  tables.o(.bss.online_sbz15)
    online_sbz16                             0xf00017ac   Data           4  tables.o(.bss.online_sbz16)
    online_sbz17                             0xf00017b0   Data           4  tables.o(.bss.online_sbz17)
    online_sbz2                              0xf00017b4   Data           4  tables.o(.bss.online_sbz2)
    online_sbz3                              0xf00017b8   Data           4  tables.o(.bss.online_sbz3)
    online_sbz4                              0xf00017bc   Data           4  tables.o(.bss.online_sbz4)
    online_sbz5                              0xf00017c0   Data           4  tables.o(.bss.online_sbz5)
    online_sbz6                              0xf00017c4   Data           4  tables.o(.bss.online_sbz6)
    online_sbz7                              0xf00017c8   Data           4  tables.o(.bss.online_sbz7)
    online_sbz8                              0xf00017cc   Data           4  tables.o(.bss.online_sbz8)
    online_sbz9                              0xf00017d0   Data           4  tables.o(.bss.online_sbz9)
    .bss.os.msgqueue.cb$$Base                0xf0002818   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0xf000284c   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0xf000289c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0xf0002924   Number         0  rtx_lib.o(.bss.os.thread.cb)
    sband0trtest                             0xf0002d28   Data           8  tables.o(.bss.sband0trtest)
    sband10tr                                0xf0002d30   Data           8  tables.o(.bss.sband10tr)
    sband11tr                                0xf0002d38   Data           8  tables.o(.bss.sband11tr)
    sband12tr                                0xf0002d40   Data           8  tables.o(.bss.sband12tr)
    sband13tr                                0xf0002d48   Data           8  tables.o(.bss.sband13tr)
    sband14tr                                0xf0002d50   Data           8  tables.o(.bss.sband14tr)
    sband15tr                                0xf0002d58   Data           8  tables.o(.bss.sband15tr)
    sband16tr                                0xf0002d60   Data           8  tables.o(.bss.sband16tr)
    sband17tr                                0xf0002d68   Data           8  tables.o(.bss.sband17tr)
    sband18tr                                0xf0002d70   Data           8  tables.o(.bss.sband18tr)
    sband19tr                                0xf0002d78   Data           8  tables.o(.bss.sband19tr)
    sband1tr                                 0xf0002d80   Data           8  tables.o(.bss.sband1tr)
    sband20tr                                0xf0002d88   Data           8  tables.o(.bss.sband20tr)
    sband21tr                                0xf0002d90   Data           8  tables.o(.bss.sband21tr)
    sband22tr                                0xf0002d98   Data           8  tables.o(.bss.sband22tr)
    sband23tr                                0xf0002da0   Data           8  tables.o(.bss.sband23tr)
    sband24tr                                0xf0002da8   Data           8  tables.o(.bss.sband24tr)
    sband25tr                                0xf0002db0   Data           8  tables.o(.bss.sband25tr)
    sband26tr                                0xf0002db8   Data           8  tables.o(.bss.sband26tr)
    sband27tr                                0xf0002dc0   Data           8  tables.o(.bss.sband27tr)
    sband28tr                                0xf0002dc8   Data           8  tables.o(.bss.sband28tr)
    sband29tr                                0xf0002dd0   Data           8  tables.o(.bss.sband29tr)
    sband2tr                                 0xf0002dd8   Data           8  tables.o(.bss.sband2tr)
    sband30tr                                0xf0002de0   Data           8  tables.o(.bss.sband30tr)
    sband31tr                                0xf0002de8   Data           8  tables.o(.bss.sband31tr)
    sband32tr                                0xf0002df0   Data           8  tables.o(.bss.sband32tr)
    sband3tr                                 0xf0002df8   Data           8  tables.o(.bss.sband3tr)
    sband4tr                                 0xf0002e00   Data           8  tables.o(.bss.sband4tr)
    sband5tr                                 0xf0002e08   Data           8  tables.o(.bss.sband5tr)
    sband6tr                                 0xf0002e10   Data           8  tables.o(.bss.sband6tr)
    sband7tr                                 0xf0002e18   Data           8  tables.o(.bss.sband7tr)
    sband8tr                                 0xf0002e20   Data           8  tables.o(.bss.sband8tr)
    sband9tr                                 0xf0002e28   Data           8  tables.o(.bss.sband9tr)
    sbt0                                     0xf0002e30   Data           8  tables.o(.bss.sbt0)
    sbt1                                     0xf0002e38   Data           8  tables.o(.bss.sbt1)
    sbt10                                    0xf0002e40   Data           8  tables.o(.bss.sbt10)
    sbt11                                    0xf0002e48   Data           8  tables.o(.bss.sbt11)
    sbt12                                    0xf0002e50   Data           8  tables.o(.bss.sbt12)
    sbt13                                    0xf0002e58   Data           8  tables.o(.bss.sbt13)
    sbt14                                    0xf0002e60   Data           8  tables.o(.bss.sbt14)
    sbt15                                    0xf0002e68   Data           8  tables.o(.bss.sbt15)
    sbt16                                    0xf0002e70   Data           8  tables.o(.bss.sbt16)
    sbt17                                    0xf0002e78   Data           8  tables.o(.bss.sbt17)
    sbt18                                    0xf0002e80   Data           8  tables.o(.bss.sbt18)
    sbt19                                    0xf0002e88   Data           8  tables.o(.bss.sbt19)
    sbt2                                     0xf0002e90   Data           8  tables.o(.bss.sbt2)
    sbt20                                    0xf0002e98   Data           8  tables.o(.bss.sbt20)
    sbt21                                    0xf0002ea0   Data           8  tables.o(.bss.sbt21)
    sbt22                                    0xf0002ea8   Data           8  tables.o(.bss.sbt22)
    sbt23                                    0xf0002eb0   Data           8  tables.o(.bss.sbt23)
    sbt24                                    0xf0002eb8   Data           8  tables.o(.bss.sbt24)
    sbt25                                    0xf0002ec0   Data           8  tables.o(.bss.sbt25)
    sbt26                                    0xf0002ec8   Data           8  tables.o(.bss.sbt26)
    sbt27                                    0xf0002ed0   Data           8  tables.o(.bss.sbt27)
    sbt28                                    0xf0002ed8   Data           8  tables.o(.bss.sbt28)
    sbt29                                    0xf0002ee0   Data           8  tables.o(.bss.sbt29)
    sbt3                                     0xf0002ee8   Data           8  tables.o(.bss.sbt3)
    sbt30                                    0xf0002ef0   Data           8  tables.o(.bss.sbt30)
    sbt31                                    0xf0002ef8   Data           8  tables.o(.bss.sbt31)
    sbt32                                    0xf0002f00   Data           8  tables.o(.bss.sbt32)
    sbt33                                    0xf0002f08   Data           8  tables.o(.bss.sbt33)
    sbt34                                    0xf0002f10   Data           8  tables.o(.bss.sbt34)
    sbt35                                    0xf0002f18   Data           8  tables.o(.bss.sbt35)
    sbt36                                    0xf0002f20   Data           8  tables.o(.bss.sbt36)
    sbt37                                    0xf0002f28   Data           8  tables.o(.bss.sbt37)
    sbt38                                    0xf0002f30   Data           8  tables.o(.bss.sbt38)
    sbt39                                    0xf0002f38   Data           8  tables.o(.bss.sbt39)
    sbt4                                     0xf0002f40   Data           8  tables.o(.bss.sbt4)
    sbt40                                    0xf0002f48   Data           8  tables.o(.bss.sbt40)
    sbt41                                    0xf0002f50   Data           8  tables.o(.bss.sbt41)
    sbt42                                    0xf0002f58   Data           8  tables.o(.bss.sbt42)
    sbt43                                    0xf0002f60   Data           8  tables.o(.bss.sbt43)
    sbt44                                    0xf0002f68   Data           8  tables.o(.bss.sbt44)
    sbt45                                    0xf0002f70   Data           8  tables.o(.bss.sbt45)
    sbt46                                    0xf0002f78   Data           8  tables.o(.bss.sbt46)
    sbt47                                    0xf0002f80   Data           8  tables.o(.bss.sbt47)
    sbt48                                    0xf0002f88   Data           8  tables.o(.bss.sbt48)
    sbt49                                    0xf0002f90   Data           8  tables.o(.bss.sbt49)
    sbt5                                     0xf0002f98   Data           8  tables.o(.bss.sbt5)
    sbt50                                    0xf0002fa0   Data           8  tables.o(.bss.sbt50)
    sbt51                                    0xf0002fa8   Data           8  tables.o(.bss.sbt51)
    sbt52                                    0xf0002fb0   Data           8  tables.o(.bss.sbt52)
    sbt53                                    0xf0002fb8   Data           8  tables.o(.bss.sbt53)
    sbt54                                    0xf0002fc0   Data           8  tables.o(.bss.sbt54)
    sbt55                                    0xf0002fc8   Data           8  tables.o(.bss.sbt55)
    sbt56                                    0xf0002fd0   Data           8  tables.o(.bss.sbt56)
    sbt57                                    0xf0002fd8   Data           8  tables.o(.bss.sbt57)
    sbt58                                    0xf0002fe0   Data           8  tables.o(.bss.sbt58)
    sbt59                                    0xf0002fe8   Data           8  tables.o(.bss.sbt59)
    sbt6                                     0xf0002ff0   Data           8  tables.o(.bss.sbt6)
    sbt60                                    0xf0002ff8   Data           8  tables.o(.bss.sbt60)
    sbt61                                    0xf0003000   Data           8  tables.o(.bss.sbt61)
    sbt62                                    0xf0003008   Data           8  tables.o(.bss.sbt62)
    sbt63                                    0xf0003010   Data           8  tables.o(.bss.sbt63)
    sbt64                                    0xf0003018   Data           8  tables.o(.bss.sbt64)
    sbt65                                    0xf0003020   Data           8  tables.o(.bss.sbt65)
    sbt66                                    0xf0003028   Data           8  tables.o(.bss.sbt66)
    sbt67                                    0xf0003030   Data           8  tables.o(.bss.sbt67)
    sbt7                                     0xf0003038   Data           8  tables.o(.bss.sbt7)
    sbt8                                     0xf0003040   Data           8  tables.o(.bss.sbt8)
    sbt9                                     0xf0003048   Data           8  tables.o(.bss.sbt9)
    sbttest                                  0xf0003050   Data           8  tables.o(.bss.sbttest)
    sby1                                     0xf0003058   Data           8  tables.o(.bss.sby1)
    sby10                                    0xf0003060   Data           8  tables.o(.bss.sby10)
    sby11                                    0xf0003068   Data           8  tables.o(.bss.sby11)
    sby12                                    0xf0003070   Data           8  tables.o(.bss.sby12)
    sby13                                    0xf0003078   Data           8  tables.o(.bss.sby13)
    sby14                                    0xf0003080   Data           8  tables.o(.bss.sby14)
    sby15                                    0xf0003088   Data           8  tables.o(.bss.sby15)
    sby16                                    0xf0003090   Data           8  tables.o(.bss.sby16)
    sby17                                    0xf0003098   Data           8  tables.o(.bss.sby17)
    sby18                                    0xf00030a0   Data           8  tables.o(.bss.sby18)
    sby19                                    0xf00030a8   Data           8  tables.o(.bss.sby19)
    sby2                                     0xf00030b0   Data           8  tables.o(.bss.sby2)
    sby20                                    0xf00030b8   Data           8  tables.o(.bss.sby20)
    sby21                                    0xf00030c0   Data           8  tables.o(.bss.sby21)
    sby3                                     0xf00030c8   Data           8  tables.o(.bss.sby3)
    sby4                                     0xf00030d0   Data           8  tables.o(.bss.sby4)
    sby5                                     0xf00030d8   Data           8  tables.o(.bss.sby5)
    sby6                                     0xf00030e0   Data           8  tables.o(.bss.sby6)
    sby7                                     0xf00030e8   Data           8  tables.o(.bss.sby7)
    sby8                                     0xf00030f0   Data           8  tables.o(.bss.sby8)
    sby9                                     0xf00030f8   Data           8  tables.o(.bss.sby9)
    sbz0                                     0xf0003100   Data           8  tables.o(.bss.sbz0)
    sbz1                                     0xf0003108   Data           8  tables.o(.bss.sbz1)
    sbz10                                    0xf0003110   Data           8  tables.o(.bss.sbz10)
    sbz11                                    0xf0003118   Data           8  tables.o(.bss.sbz11)
    sbz12                                    0xf0003120   Data           8  tables.o(.bss.sbz12)
    sbz13                                    0xf0003128   Data           8  tables.o(.bss.sbz13)
    sbz14                                    0xf0003130   Data           8  tables.o(.bss.sbz14)
    sbz15                                    0xf0003138   Data           8  tables.o(.bss.sbz15)
    sbz16                                    0xf0003140   Data           8  tables.o(.bss.sbz16)
    sbz17                                    0xf0003148   Data           8  tables.o(.bss.sbz17)
    sbz2                                     0xf0003150   Data           8  tables.o(.bss.sbz2)
    sbz3                                     0xf0003158   Data           8  tables.o(.bss.sbz3)
    sbz4                                     0xf0003160   Data           8  tables.o(.bss.sbz4)
    sbz5                                     0xf0003168   Data           8  tables.o(.bss.sbz5)
    sbz6                                     0xf0003170   Data           8  tables.o(.bss.sbz6)
    sbz7                                     0xf0003178   Data           8  tables.o(.bss.sbz7)
    sbz8                                     0xf0003180   Data           8  tables.o(.bss.sbz8)
    sbz9                                     0xf0003188   Data           8  tables.o(.bss.sbz9)
    Image$$ARM_LIB_STACK$$ZI$$Limit          0xf00f0000   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x000003c1

  Load Region LR_ROM (Base: 0x00000000, Size: 0x0000a900, Max: 0xefffffff, ABSOLUTE, COMPRESSED[0x00009980])

    Execution Region ER_ROM (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00009790, Max: 0xefffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000003c0   Data   RO         1846    RESET               startup_armcm4.o
    0x000003c0   0x000003c0   0x00000000   Code   RO         1865  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x000003c0   0x000003c0   0x00000004   Code   RO         1883    .ARM.Collect$$$$00000003  mc_w.l(entry4.o)
    0x000003c4   0x000003c4   0x00000004   Code   RO         1886    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x000003c8   0x000003c8   0x00000000   Code   RO         1888    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x000003c8   0x000003c8   0x00000000   Code   RO         1890    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x000003c8   0x000003c8   0x00000008   Code   RO         1891    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x000003d0   0x000003d0   0x00000000   Code   RO         1893    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x000003d0   0x000003d0   0x00000000   Code   RO         1895    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x000003d0   0x000003d0   0x00000004   Code   RO         1884    .ARM.Collect$$$$00002714  mc_w.l(entry4.o)
    0x000003d4   0x000003d4   0x0000000c   PAD
    0x000003e0   0x000003e0   0x000053ca   Code   RO           71    .text               asm.o
    0x000057aa   0x000057aa   0x00000002   PAD
    0x000057ac   0x000057ac   0x000000bc   Code   RO          622    .text               irq_armv7m.o
    0x00005868   0x00005868   0x00000024   Code   RO         1874    .text               mc_w.l(rand.o)
    0x0000588c   0x0000588c   0x00000024   Code   RO         1877    .text               mc_w.l(memcpya.o)
    0x000058b0   0x000058b0   0x00000024   Code   RO         1879    .text               mc_w.l(memseta.o)
    0x000058d4   0x000058d4   0x00000024   Code   RO         1897    .text               mc_w.l(init.o)
    0x000058f8   0x000058f8   0x0000003a   Code   RO         1907    .text               mc_w.l(__dczerorl.o)
    0x00005932   0x00005932   0x00000002   PAD
    0x00005934   0x00005934   0x0000001a   Code   RO           34    .text.AES_Encrypt   aes.o
    0x0000594e   0x0000594e   0x00000002   PAD
    0x00005950   0x00005950   0x00000112   Code   RO           28    .text.AES_Encrypt_ECB  aes.o
    0x00005a62   0x00005a62   0x00000002   PAD
    0x00005a64   0x00005a64   0x00000046   Code   RO           22    .text.AES_Setkey    aes.o
    0x00005aaa   0x00005aaa   0x00000002   PAD
    0x00005aac   0x00005aac   0x00000004   Code   RO         1840    .text.Default_Handler  startup_armcm4.o
    0x00005ab0   0x00005ab0   0x0000003c   Code   RO         1775    .text.EventCheckFilter  eventrecorder.o
    0x00005aec   0x00005aec   0x0000005a   Code   RO         1761    .text.EventGetTS    eventrecorder.o
    0x00005b46   0x00005b46   0x00000002   PAD
    0x00005b48   0x00005b48   0x0000005a   Code   RO         1779    .text.EventRecord2  eventrecorder.o
    0x00005ba2   0x00005ba2   0x00000002   PAD
    0x00005ba4   0x00005ba4   0x00000096   Code   RO         1781    .text.EventRecord4  eventrecorder.o
    0x00005c3a   0x00005c3a   0x00000002   PAD
    0x00005c3c   0x00005c3c   0x000000fe   Code   RO         1763    .text.EventRecordItem  eventrecorder.o
    0x00005d3a   0x00005d3a   0x00000002   PAD
    0x00005d3c   0x00005d3c   0x00000020   Code   RO         1753    .text.EventRecorderTimerGetCount  eventrecorder.o
    0x00005d5c   0x00005d5c   0x0000001a   Code   RO          858    .text.EvrRtxDelayCompleted  rtx_evr.o
    0x00005d76   0x00005d76   0x00000002   PAD
    0x00005d78   0x00005d78   0x0000001a   Code   RO          906    .text.EvrRtxEventFlagsWaitTimeout  rtx_evr.o
    0x00005d92   0x00005d92   0x00000002   PAD
    0x00005d94   0x00005d94   0x00000018   Code   RO          764    .text.EvrRtxKernelErrorNotify  rtx_evr.o
    0x00005dac   0x00005dac   0x0000002a   Code   RO          716    .text.EvrRtxMemoryAlloc  rtx_evr.o
    0x00005dd6   0x00005dd6   0x00000002   PAD
    0x00005dd8   0x00005dd8   0x0000001c   Code   RO          722    .text.EvrRtxMemoryBlockAlloc  rtx_evr.o
    0x00005df4   0x00005df4   0x00000028   Code   RO          724    .text.EvrRtxMemoryBlockFree  rtx_evr.o
    0x00005e1c   0x00005e1c   0x0000002a   Code   RO          720    .text.EvrRtxMemoryBlockInit  rtx_evr.o
    0x00005e46   0x00005e46   0x00000002   PAD
    0x00005e48   0x00005e48   0x00000028   Code   RO          718    .text.EvrRtxMemoryFree  rtx_evr.o
    0x00005e70   0x00005e70   0x0000001a   Code   RO          984    .text.EvrRtxMemoryPoolAllocTimeout  rtx_evr.o
    0x00005e8a   0x00005e8a   0x00000002   PAD
    0x00005e8c   0x00005e8c   0x0000001c   Code   RO         1012    .text.EvrRtxMessageQueueCreated  rtx_evr.o
    0x00005ea8   0x00005ea8   0x00000018   Code   RO         1008    .text.EvrRtxMessageQueueError  rtx_evr.o
    0x00005ec0   0x00005ec0   0x0000002a   Code   RO         1028    .text.EvrRtxMessageQueueGet  rtx_evr.o
    0x00005eea   0x00005eea   0x00000002   PAD
    0x00005eec   0x00005eec   0x00000028   Code   RO         1030    .text.EvrRtxMessageQueueGetPending  rtx_evr.o
    0x00005f14   0x00005f14   0x0000001a   Code   RO         1032    .text.EvrRtxMessageQueueGetTimeout  rtx_evr.o
    0x00005f2e   0x00005f2e   0x00000002   PAD
    0x00005f30   0x00005f30   0x0000001c   Code   RO         1022    .text.EvrRtxMessageQueueInsertPending  rtx_evr.o
    0x00005f4c   0x00005f4c   0x0000001c   Code   RO         1024    .text.EvrRtxMessageQueueInserted  rtx_evr.o
    0x00005f68   0x00005f68   0x0000001c   Code   RO         1026    .text.EvrRtxMessageQueueNotInserted  rtx_evr.o
    0x00005f84   0x00005f84   0x0000001c   Code   RO         1036    .text.EvrRtxMessageQueueNotRetrieved  rtx_evr.o
    0x00005fa0   0x00005fa0   0x0000002e   Code   RO         1016    .text.EvrRtxMessageQueuePut  rtx_evr.o
    0x00005fce   0x00005fce   0x00000002   PAD
    0x00005fd0   0x00005fd0   0x00000028   Code   RO         1018    .text.EvrRtxMessageQueuePutPending  rtx_evr.o
    0x00005ff8   0x00005ff8   0x0000001a   Code   RO         1020    .text.EvrRtxMessageQueuePutTimeout  rtx_evr.o
    0x00006012   0x00006012   0x00000002   PAD
    0x00006014   0x00006014   0x0000001c   Code   RO         1034    .text.EvrRtxMessageQueueRetrieved  rtx_evr.o
    0x00006030   0x00006030   0x0000001a   Code   RO          928    .text.EvrRtxMutexAcquireTimeout  rtx_evr.o
    0x0000604a   0x0000604a   0x00000002   PAD
    0x0000604c   0x0000604c   0x0000001a   Code   RO          956    .text.EvrRtxSemaphoreAcquireTimeout  rtx_evr.o
    0x00006066   0x00006066   0x00000002   PAD
    0x00006068   0x00006068   0x0000001c   Code   RO          808    .text.EvrRtxThreadBlocked  rtx_evr.o
    0x00006084   0x00006084   0x0000001a   Code   RO          842    .text.EvrRtxThreadFlagsWaitTimeout  rtx_evr.o
    0x0000609e   0x0000609e   0x00000002   PAD
    0x000060a0   0x000060a0   0x0000001a   Code   RO          812    .text.EvrRtxThreadPreempted  rtx_evr.o
    0x000060ba   0x000060ba   0x00000002   PAD
    0x000060bc   0x000060bc   0x0000001a   Code   RO          814    .text.EvrRtxThreadSwitched  rtx_evr.o
    0x000060d6   0x000060d6   0x00000002   PAD
    0x000060d8   0x000060d8   0x0000001c   Code   RO          810    .text.EvrRtxThreadUnblocked  rtx_evr.o
    0x000060f4   0x000060f4   0x0000001c   Code   RO          862    .text.EvrRtxTimerCallback  rtx_evr.o
    0x00006110   0x00006110   0x00000012   Code   RO         1777    .text.GetContext    eventrecorder.o
    0x00006122   0x00006122   0x00000002   PAD
    0x00006124   0x00006124   0x00000012   Code   RO         1793    .text.GetRecordIndex  eventrecorder.o
    0x00006136   0x00006136   0x00000002   PAD
    0x00006138   0x00006138   0x00000004   Code   RO         1844    .text.HardFault_Handler  startup_armcm4.o
    0x0000613c   0x0000613c   0x00000012   Code   RO         1801    .text.IncrementRecordsDumped  eventrecorder.o
    0x0000614e   0x0000614e   0x00000002   PAD
    0x00006150   0x00006150   0x00000012   Code   RO         1799    .text.IncrementRecordsWritten  eventrecorder.o
    0x00006162   0x00006162   0x00000002   PAD
    0x00006164   0x00006164   0x00000014   Code   RO         1067    .text.IsException   rtx_kernel.o
    0x00006178   0x00006178   0x00000014   Code   RO         1272    .text.IsException   rtx_msgqueue.o
    0x0000618c   0x0000618c   0x0000002e   Code   RO         1069    .text.IsIrqMasked   rtx_kernel.o
    0x000061ba   0x000061ba   0x00000002   PAD
    0x000061bc   0x000061bc   0x0000002e   Code   RO         1274    .text.IsIrqMasked   rtx_msgqueue.o
    0x000061ea   0x000061ea   0x00000002   PAD
    0x000061ec   0x000061ec   0x00000014   Code   RO         1073    .text.IsPrivileged  rtx_kernel.o
    0x00006200   0x00006200   0x00000036   Code   RO         1795    .text.LockRecord    eventrecorder.o
    0x00006236   0x00006236   0x00000002   PAD
    0x00006238   0x00006238   0x00000012   Code   RO         1783    .text.LockTS_Overflow  eventrecorder.o
    0x0000624a   0x0000624a   0x00000002   PAD
    0x0000624c   0x0000624c   0x00000018   Code   RO         1178    .text.MemBlockPtr   rtx_memory.o
    0x00006264   0x00006264   0x0000000a   Code   RO         1176    .text.MemHeadPtr    rtx_memory.o
    0x0000626e   0x0000626e   0x00000002   PAD
    0x00006270   0x00006270   0x00000052   Code   RO         1322    .text.MessageQueueGet  rtx_msgqueue.o
    0x000062c2   0x000062c2   0x00000002   PAD
    0x000062c4   0x000062c4   0x000000ac   Code   RO         1312    .text.MessageQueuePut  rtx_msgqueue.o
    0x00006370   0x00006370   0x00000042   Code   RO         1308    .text.MessageQueueRemove  rtx_msgqueue.o
    0x000063b2   0x000063b2   0x00000002   PAD
    0x000063b4   0x000063b4   0x0000000c   Code   RO         1716    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x000063c0   0x000063c0   0x00000020   Code   RO         1724    .text.OS_Tick_GetCount  os_systick.o
    0x000063e0   0x000063e0   0x0000000e   Code   RO         1722    .text.OS_Tick_GetInterval  os_systick.o
    0x000063ee   0x000063ee   0x00000002   PAD
    0x000063f0   0x000063f0   0x00000010   Code   RO         1726    .text.OS_Tick_GetOverflow  os_systick.o
    0x00006400   0x00006400   0x00000008   Code   RO         1842    .text.Reset_Handler  startup_armcm4.o
    0x00006408   0x00006408   0x00000010   Code   RO         1463    .text.SetPendSV     rtx_system.o
    0x00006418   0x00006418   0x0000000c   Code   RO         1502    .text.StackOffsetR0  rtx_thread.o
    0x00006424   0x00006424   0x00000036   Code   RO         1751    .text.SysTimerIsRunning  eventrecorder.o
    0x0000645a   0x0000645a   0x00000002   PAD
    0x0000645c   0x0000645c   0x00000026   Code   RO         1856    .text.SystemInit    system_armcm4.o
    0x00006482   0x00006482   0x00000002   PAD
    0x00006484   0x00006484   0x0000009e   Code   RO         1685    .text.TimerInsert   rtx_timer.o
    0x00006522   0x00006522   0x00000002   PAD
    0x00006524   0x00006524   0x00000028   Code   RO         1681    .text.TimerUnlink   rtx_timer.o
    0x0000654c   0x0000654c   0x00000032   Code   RO         1797    .text.UnlockRecord  eventrecorder.o
    0x0000657e   0x0000657e   0x00000002   PAD
    0x00006580   0x00006580   0x00000012   Code   RO         1785    .text.UnlockTS_Overflow  eventrecorder.o
    0x00006592   0x00006592   0x00000002   PAD
    0x00006594   0x00006594   0x0000001a   Code   RO         1787    .text.UpdateTS      eventrecorder.o
    0x000065ae   0x000065ae   0x00000002   PAD
    0x000065b0   0x000065b0   0x00000082   Code   RO           14    .text.add_round_key  aes.o
    0x00006632   0x00006632   0x00000002   PAD
    0x00006634   0x00006634   0x00000408   Code   RO           20    .text.aes_ct_bitslice_Sbox  aes.o
    0x00006a3c   0x00006a3c   0x000001c4   Code   RO           12    .text.aes_ct_bitslice_encrypt  aes.o
    0x00006c00   0x00006c00   0x000000ca   Code   RO            4    .text.aes_ct_keysched  aes.o
    0x00006cca   0x00006cca   0x00000002   PAD
    0x00006ccc   0x00006ccc   0x000002a8   Code   RO            8    .text.aes_ct_ortho  aes.o
    0x00006f74   0x00006f74   0x00000072   Code   RO           10    .text.aes_ct_skey_expand  aes.o
    0x00006fe6   0x00006fe6   0x00000002   PAD
    0x00006fe8   0x00006fe8   0x00000132   Code   RO            6    .text.aes_keysched_base  aes.o
    0x0000711a   0x0000711a   0x00000002   PAD
    0x0000711c   0x0000711c   0x0000002c   Code   RO         1465    .text.atomic_dec16_nz  rtx_system.o
    0x00007148   0x00007148   0x00000020   Code   RO         1203    .text.atomic_dec32  rtx_mempool.o
    0x00007168   0x00007168   0x00000028   Code   RO         1324    .text.atomic_dec32_nz  rtx_msgqueue.o
    0x00007190   0x00007190   0x00000034   Code   RO         1467    .text.atomic_inc16_lim  rtx_system.o
    0x000071c4   0x000071c4   0x00000038   Code   RO         1471    .text.atomic_inc16_lt  rtx_system.o
    0x000071fc   0x000071fc   0x00000020   Code   RO         1197    .text.atomic_inc32  rtx_mempool.o
    0x0000721c   0x0000721c   0x00000020   Code   RO         1314    .text.atomic_inc32  rtx_msgqueue.o
    0x0000723c   0x0000723c   0x00000020   Code   RO         1803    .text.atomic_inc32  eventrecorder.o
    0x0000725c   0x0000725c   0x00000024   Code   RO         1805    .text.atomic_inc8   eventrecorder.o
    0x00007280   0x00007280   0x00000028   Code   RO         1195    .text.atomic_link_get  rtx_mempool.o
    0x000072a8   0x000072a8   0x00000030   Code   RO         1201    .text.atomic_link_put  rtx_mempool.o
    0x000072d8   0x000072d8   0x00000020   Code   RO         1791    .text.atomic_wr32   eventrecorder.o
    0x000072f8   0x000072f8   0x00000028   Code   RO         1326    .text.atomic_wr8    rtx_msgqueue.o
    0x00007320   0x00007320   0x00000028   Code   RO         1789    .text.atomic_wr8    eventrecorder.o
    0x00007348   0x00007348   0x00000228   Code   RO           26    .text.de_randomization  aes.o
    0x00007570   0x00007570   0x00000010   Code   RO           30    .text.dec32le       aes.o
    0x00007580   0x00007580   0x0000002c   Code   RO           32    .text.enc32le       aes.o
    0x000075ac   0x000075ac   0x000000a8   Code   RO         1284    .text.isrRtxMessageQueueGet  rtx_msgqueue.o
    0x00007654   0x00007654   0x000000b8   Code   RO         1280    .text.isrRtxMessageQueuePut  rtx_msgqueue.o
    0x0000770c   0x0000770c   0x00000054   Code   RO         1447    .text.isr_queue_get  rtx_system.o
    0x00007760   0x00007760   0x0000005e   Code   RO         1461    .text.isr_queue_put  rtx_system.o
    0x000077be   0x000077be   0x00000002   PAD
    0x000077c0   0x000077c0   0x00000054   Code   RO           60    .text.main          main.o
    0x00007814   0x00007814   0x00000042   Code   RO         1077    .text.osKernelGetState  rtx_kernel.o
    0x00007856   0x00007856   0x00000002   PAD
    0x00007858   0x00007858   0x0000003a   Code   RO         1101    .text.osKernelGetSysTimerCount  rtx_kernel.o
    0x00007892   0x00007892   0x00000002   PAD
    0x00007894   0x00007894   0x0000007e   Code   RO         1282    .text.osMessageQueueGet  rtx_msgqueue.o
    0x00007912   0x00007912   0x00000002   PAD
    0x00007914   0x00007914   0x0000008a   Code   RO         1278    .text.osMessageQueuePut  rtx_msgqueue.o
    0x0000799e   0x0000799e   0x00000002   PAD
    0x000079a0   0x000079a0   0x0000002e   Code   RO         1738    .text.osRtxErrorNotify  rtx_config.o
    0x000079ce   0x000079ce   0x00000002   PAD
    0x000079d0   0x000079d0   0x0000000a   Code   RO         1451    .text.osRtxEventFlagsObject  rtx_system.o
    0x000079da   0x000079da   0x00000002   PAD
    0x000079dc   0x000079dc   0x0000001c   Code   RO         1063    .text.osRtxKernelErrorNotify  rtx_kernel.o
    0x000079f8   0x000079f8   0x0000000c   Code   RO         1443    .text.osRtxKernelGetState  rtx_system.o
    0x00007a04   0x00007a04   0x0000000c   Code   RO         1508    .text.osRtxKernelGetState  rtx_thread.o
    0x00007a10   0x00007a10   0x0000000c   Code   RO         1111    .text.osRtxKernelState  rtx_kernel.o
    0x00007a1c   0x00007a1c   0x0000014c   Code   RO         1180    .text.osRtxMemoryAlloc  rtx_memory.o
    0x00007b68   0x00007b68   0x000000c2   Code   RO         1182    .text.osRtxMemoryFree  rtx_memory.o
    0x00007c2a   0x00007c2a   0x00000002   PAD
    0x00007c2c   0x00007c2c   0x0000004a   Code   RO         1193    .text.osRtxMemoryPoolAlloc  rtx_mempool.o
    0x00007c76   0x00007c76   0x00000002   PAD
    0x00007c78   0x00007c78   0x00000064   Code   RO         1199    .text.osRtxMemoryPoolFree  rtx_mempool.o
    0x00007cdc   0x00007cdc   0x00000098   Code   RO         1191    .text.osRtxMemoryPoolInit  rtx_mempool.o
    0x00007d74   0x00007d74   0x0000000a   Code   RO         1455    .text.osRtxMemoryPoolObject  rtx_system.o
    0x00007d7e   0x00007d7e   0x00000002   PAD
    0x00007d80   0x00007d80   0x0000000a   Code   RO         1457    .text.osRtxMessageObject  rtx_system.o
    0x00007d8a   0x00007d8a   0x00000002   PAD
    0x00007d8c   0x00007d8c   0x0000000a   Code   RO         1266    .text.osRtxMessageQueueId  rtx_msgqueue.o
    0x00007d96   0x00007d96   0x00000002   PAD
    0x00007d98   0x00007d98   0x00000144   Code   RO         1306    .text.osRtxMessageQueuePostProcess  rtx_msgqueue.o
    0x00007edc   0x00007edc   0x0000003e   Code   RO         1264    .text.osRtxMessageQueueTimerSetup  rtx_msgqueue.o
    0x00007f1a   0x00007f1a   0x00000002   PAD
    0x00007f1c   0x00007f1c   0x0000000a   Code   RO         1498    .text.osRtxMutexObject  rtx_thread.o
    0x00007f26   0x00007f26   0x00000002   PAD
    0x00007f28   0x00007f28   0x000000ac   Code   RO         1345    .text.osRtxMutexOwnerRestore  rtx_mutex.o
    0x00007fd4   0x00007fd4   0x0000000a   Code   RO         1310    .text.osRtxObject   rtx_msgqueue.o
    0x00007fde   0x00007fde   0x00000002   PAD
    0x00007fe0   0x00007fe0   0x0000000a   Code   RO         1469    .text.osRtxObject   rtx_system.o
    0x00007fea   0x00007fea   0x00000002   PAD
    0x00007fec   0x00007fec   0x0000000a   Code   RO         1488    .text.osRtxObject   rtx_thread.o
    0x00007ff6   0x00007ff6   0x00000002   PAD
    0x00007ff8   0x00007ff8   0x000000b8   Code   RO         1445    .text.osRtxPendSV_Handler  rtx_system.o
    0x000080b0   0x000080b0   0x00000042   Code   RO         1459    .text.osRtxPostProcess  rtx_system.o
    0x000080f2   0x000080f2   0x00000002   PAD
    0x000080f4   0x000080f4   0x0000000a   Code   RO         1453    .text.osRtxSemaphoreObject  rtx_system.o
    0x000080fe   0x000080fe   0x00000002   PAD
    0x00008100   0x00008100   0x00000088   Code   RO         1512    .text.osRtxThreadBlock  rtx_thread.o
    0x00008188   0x00008188   0x000000fa   Code   RO         1520    .text.osRtxThreadDelayInsert  rtx_thread.o
    0x00008282   0x00008282   0x00000002   PAD
    0x00008284   0x00008284   0x0000009c   Code   RO         1516    .text.osRtxThreadDelayRemove  rtx_thread.o
    0x00008320   0x00008320   0x00000150   Code   RO         1494    .text.osRtxThreadDelayTick  rtx_thread.o
    0x00008470   0x00008470   0x00000096   Code   RO         1506    .text.osRtxThreadDispatch  rtx_thread.o
    0x00008506   0x00008506   0x00000002   PAD
    0x00008508   0x00008508   0x0000000c   Code   RO         1320    .text.osRtxThreadGetRunning  rtx_msgqueue.o
    0x00008514   0x00008514   0x0000000c   Code   RO         1510    .text.osRtxThreadGetRunning  rtx_thread.o
    0x00008520   0x00008520   0x0000000c   Code   RO         1679    .text.osRtxThreadGetRunning  rtx_timer.o
    0x0000852c   0x0000852c   0x00000036   Code   RO         1484    .text.osRtxThreadListGet  rtx_thread.o
    0x00008562   0x00008562   0x00000002   PAD
    0x00008564   0x00008564   0x00000076   Code   RO         1480    .text.osRtxThreadListPut  rtx_thread.o
    0x000085da   0x000085da   0x00000002   PAD
    0x000085dc   0x000085dc   0x00000032   Code   RO         1490    .text.osRtxThreadListRemove  rtx_thread.o
    0x0000860e   0x0000860e   0x00000002   PAD
    0x00008610   0x00008610   0x00000022   Code   RO         1496    .text.osRtxThreadListRoot  rtx_thread.o
    0x00008632   0x00008632   0x00000002   PAD
    0x00008634   0x00008634   0x00000058   Code   RO         1486    .text.osRtxThreadListSort  rtx_thread.o
    0x0000868c   0x0000868c   0x0000000a   Code   RO         1449    .text.osRtxThreadObject  rtx_system.o
    0x00008696   0x00008696   0x00000002   PAD
    0x00008698   0x00008698   0x0000000a   Code   RO         1482    .text.osRtxThreadObject  rtx_thread.o
    0x000086a2   0x000086a2   0x00000002   PAD
    0x000086a4   0x000086a4   0x00000020   Code   RO         1492    .text.osRtxThreadReadyPut  rtx_thread.o
    0x000086c4   0x000086c4   0x00000022   Code   RO         1500    .text.osRtxThreadRegPtr  rtx_thread.o
    0x000086e6   0x000086e6   0x00000002   PAD
    0x000086e8   0x000086e8   0x00000014   Code   RO         1683    .text.osRtxThreadSetRunning  rtx_timer.o
    0x000086fc   0x000086fc   0x0000003c   Code   RO         1522    .text.osRtxThreadStackCheck  rtx_thread.o
    0x00008738   0x00008738   0x00000022   Code   RO         1504    .text.osRtxThreadSwitch  rtx_thread.o
    0x0000875a   0x0000875a   0x00000002   PAD
    0x0000875c   0x0000875c   0x00000076   Code   RO         1518    .text.osRtxThreadWaitEnter  rtx_thread.o
    0x000087d2   0x000087d2   0x00000002   PAD
    0x000087d4   0x000087d4   0x00000046   Code   RO         1514    .text.osRtxThreadWaitExit  rtx_thread.o
    0x0000881a   0x0000881a   0x00000002   PAD
    0x0000881c   0x0000881c   0x00000110   Code   RO         1441    .text.osRtxTick_Handler  rtx_system.o
    0x0000892c   0x0000892c   0x00000030   Code   RO         1657    .text.osRtxTimerSetup  rtx_timer.o
    0x0000895c   0x0000895c   0x00000032   Code   RO         1661    .text.osRtxTimerThread  rtx_timer.o
    0x0000898e   0x0000898e   0x00000002   PAD
    0x00008990   0x00008990   0x000000dc   Code   RO         1659    .text.osRtxTimerTick  rtx_timer.o
    0x00008a6c   0x00008a6c   0x0000028a   Code   RO           24    .text.randomization  aes.o
    0x00008cf6   0x00008cf6   0x00000002   PAD
    0x00008cf8   0x00008cf8   0x00000326   Code   RO           16    .text.shift_rows    aes.o
    0x0000901e   0x0000901e   0x00000002   PAD
    0x00009020   0x00009020   0x00000042   Code   RO           48    .text.sub_word      aes.o
    0x00009062   0x00009062   0x00000002   PAD
    0x00009064   0x00009064   0x00000010   Code   RO         1079    .text.svcRtxKernelGetState  rtx_kernel.o
    0x00009074   0x00009074   0x00000046   Code   RO         1103    .text.svcRtxKernelGetSysTimerCount  rtx_kernel.o
    0x000090ba   0x000090ba   0x00000002   PAD
    0x000090bc   0x000090bc   0x00000164   Code   RO         1328    .text.svcRtxMessageQueueGet  rtx_msgqueue.o
    0x00009220   0x00009220   0x0000029c   Code   RO         1268    .text.svcRtxMessageQueueNew  rtx_msgqueue.o
    0x000094bc   0x000094bc   0x00000158   Code   RO         1318    .text.svcRtxMessageQueuePut  rtx_msgqueue.o
    0x00009614   0x00009614   0x0000000e   Code   RO         1901    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00009622   0x00009622   0x00000002   Code   RO         1902    i.__scatterload_null  mc_w.l(handlers.o)
    0x00009624   0x00009624   0x0000000e   Code   RO         1903    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00009632   0x00009632   0x00000002   PAD
    0x00009634   0x00009634   0x00000070   Data   RO         1158    .rodata             rtx_lib.o
    0x000096a4   0x000096a4   0x00000038   Data   RO         1161    .rodata             rtx_lib.o
    0x000096dc   0x000096dc   0x00000018   Data   RO         1808    .rodata.EventRecorderInfo  eventrecorder.o
    0x000096f4   0x000096f4   0x0000000a   Data   RO           52    .rodata.Rcon        aes.o
    0x000096fe   0x000096fe   0x00000002   PAD
    0x00009700   0x00009700   0x00000004   Data   RO         1160    .rodata.osRtxUserSVC  rtx_lib.o
    0x00009704   0x00009704   0x00000024   Data   RO         1155    .rodata.os_idle_thread_attr  rtx_lib.o
    0x00009728   0x00009728   0x00000018   Data   RO         1157    .rodata.os_timer_mq_attr  rtx_lib.o
    0x00009740   0x00009740   0x00000024   Data   RO         1156    .rodata.os_timer_thread_attr  rtx_lib.o
    0x00009764   0x00009764   0x0000000b   Data   RO         1141    .rodata.str1.1      rtx_kernel.o
    0x0000976f   0x0000976f   0x00000001   PAD
    0x00009770   0x00009770   0x00000020   Data   RO         1900    Region$$Table       anon$$obj.o


    Execution Region RW_RAM (Exec base: 0xf0000000, Load base: 0x000097c0, Size: 0x00003190, Max: 0x000ef200, ABSOLUTE, COMPRESSED[0x000001c0])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0xf0000000   COMPRESSED   0x00000004   Data   RW         1875    .data               mc_w.l(rand.o)
    0xf0000004   COMPRESSED   0x00000004   Data   RW         1858    .data.SystemCoreClock  system_armcm4.o
    0xf0000008   COMPRESSED   0x00000010   Data   RW           62    .data.key           main.o
    0xf0000018   COMPRESSED   0x00000004   Data   RW          229    .data.online_sbx0   tables.o
    0xf000001c   COMPRESSED   0x00000004   Data   RW          230    .data.online_sbx1   tables.o
    0xf0000020   COMPRESSED   0x00000004   Data   RW          231    .data.online_sbx2   tables.o
    0xf0000024   COMPRESSED   0x00000004   Data   RW          232    .data.online_sbx3   tables.o
    0xf0000028   COMPRESSED   0x00000004   Data   RW          233    .data.online_sbx4   tables.o
    0xf000002c   COMPRESSED   0x00000004   Data   RW          234    .data.online_sbx5   tables.o
    0xf0000030   COMPRESSED   0x00000004   Data   RW          235    .data.online_sbx6   tables.o
    0xf0000034   COMPRESSED   0x00000004   Data   RW          236    .data.online_sbx7   tables.o
    0xf0000038   COMPRESSED   0x00000004   Data   RW           98    .data.online_sbxtest  tables.o
    0xf000003c   COMPRESSED   0x00000004   Data   RW           99    .data.online_sbytest  tables.o
    0xf0000040   COMPRESSED   0x000000a4   Data   RW         1142    .data.os            rtx_kernel.o
    0xf00000e4   COMPRESSED   0x00001000   Data   RW          102    .data.random_table  tables.o
    0xf00010e4   COMPRESSED   0x00000008   Data   RW          105    .data.sbx0          tables.o
    0xf00010ec   COMPRESSED   0x00000008   Data   RW          106    .data.sbx1          tables.o
    0xf00010f4   COMPRESSED   0x00000008   Data   RW          107    .data.sbx2          tables.o
    0xf00010fc   COMPRESSED   0x00000008   Data   RW          108    .data.sbx3          tables.o
    0xf0001104   COMPRESSED   0x00000008   Data   RW          109    .data.sbx4          tables.o
    0xf000110c   COMPRESSED   0x00000008   Data   RW          110    .data.sbx5          tables.o
    0xf0001114   COMPRESSED   0x00000008   Data   RW          111    .data.sbx6          tables.o
    0xf000111c   COMPRESSED   0x00000008   Data   RW          112    .data.sbx7          tables.o
    0xf0001124   COMPRESSED   0x00000008   Data   RW           91    .data.sbxtest       tables.o
    0xf000112c   COMPRESSED   0x00000008   Data   RW           92    .data.sbytest       tables.o
    0xf0001134   COMPRESSED   0x0000000c   PAD
    0xf0001140        -       0x00000001   Zero   RW         1809    .bss.SysTimerState  eventrecorder.o
    0xf0001141        -       0x00000001   Zero   RW         1810    .bss.TS_OverflowLock  eventrecorder.o
    0xf0001142        -       0x00000010   Zero   RW           64    .bss.dst            main.o
    0xf0001152   COMPRESSED   0x0000002e   PAD
    0xf0001180        -       0x000004a4   Zero   RW         1807    .bss.noinit         eventrecorder.o
    0xf0001624        -       0x00000004   Zero   RW          259    .bss.online_sbt0    tables.o
    0xf0001628        -       0x00000004   Zero   RW          260    .bss.online_sbt1    tables.o
    0xf000162c        -       0x00000004   Zero   RW          269    .bss.online_sbt10   tables.o
    0xf0001630        -       0x00000004   Zero   RW          270    .bss.online_sbt11   tables.o
    0xf0001634        -       0x00000004   Zero   RW          271    .bss.online_sbt12   tables.o
    0xf0001638        -       0x00000004   Zero   RW          272    .bss.online_sbt13   tables.o
    0xf000163c        -       0x00000004   Zero   RW          273    .bss.online_sbt14   tables.o
    0xf0001640        -       0x00000004   Zero   RW          274    .bss.online_sbt15   tables.o
    0xf0001644        -       0x00000004   Zero   RW          275    .bss.online_sbt16   tables.o
    0xf0001648        -       0x00000004   Zero   RW          276    .bss.online_sbt17   tables.o
    0xf000164c        -       0x00000004   Zero   RW          277    .bss.online_sbt18   tables.o
    0xf0001650        -       0x00000004   Zero   RW          278    .bss.online_sbt19   tables.o
    0xf0001654        -       0x00000004   Zero   RW          261    .bss.online_sbt2    tables.o
    0xf0001658        -       0x00000004   Zero   RW          279    .bss.online_sbt20   tables.o
    0xf000165c        -       0x00000004   Zero   RW          280    .bss.online_sbt21   tables.o
    0xf0001660        -       0x00000004   Zero   RW          281    .bss.online_sbt22   tables.o
    0xf0001664        -       0x00000004   Zero   RW          282    .bss.online_sbt23   tables.o
    0xf0001668        -       0x00000004   Zero   RW          283    .bss.online_sbt24   tables.o
    0xf000166c        -       0x00000004   Zero   RW          284    .bss.online_sbt25   tables.o
    0xf0001670        -       0x00000004   Zero   RW          285    .bss.online_sbt26   tables.o
    0xf0001674        -       0x00000004   Zero   RW          286    .bss.online_sbt27   tables.o
    0xf0001678        -       0x00000004   Zero   RW          287    .bss.online_sbt28   tables.o
    0xf000167c        -       0x00000004   Zero   RW          288    .bss.online_sbt29   tables.o
    0xf0001680        -       0x00000004   Zero   RW          262    .bss.online_sbt3    tables.o
    0xf0001684        -       0x00000004   Zero   RW          289    .bss.online_sbt30   tables.o
    0xf0001688        -       0x00000004   Zero   RW          290    .bss.online_sbt31   tables.o
    0xf000168c        -       0x00000004   Zero   RW          291    .bss.online_sbt32   tables.o
    0xf0001690        -       0x00000004   Zero   RW          292    .bss.online_sbt33   tables.o
    0xf0001694        -       0x00000004   Zero   RW          293    .bss.online_sbt34   tables.o
    0xf0001698        -       0x00000004   Zero   RW          294    .bss.online_sbt35   tables.o
    0xf000169c        -       0x00000004   Zero   RW          295    .bss.online_sbt36   tables.o
    0xf00016a0        -       0x00000004   Zero   RW          296    .bss.online_sbt37   tables.o
    0xf00016a4        -       0x00000004   Zero   RW          297    .bss.online_sbt38   tables.o
    0xf00016a8        -       0x00000004   Zero   RW          298    .bss.online_sbt39   tables.o
    0xf00016ac        -       0x00000004   Zero   RW          263    .bss.online_sbt4    tables.o
    0xf00016b0        -       0x00000004   Zero   RW          299    .bss.online_sbt40   tables.o
    0xf00016b4        -       0x00000004   Zero   RW          300    .bss.online_sbt41   tables.o
    0xf00016b8        -       0x00000004   Zero   RW          301    .bss.online_sbt42   tables.o
    0xf00016bc        -       0x00000004   Zero   RW          302    .bss.online_sbt43   tables.o
    0xf00016c0        -       0x00000004   Zero   RW          303    .bss.online_sbt44   tables.o
    0xf00016c4        -       0x00000004   Zero   RW          304    .bss.online_sbt45   tables.o
    0xf00016c8        -       0x00000004   Zero   RW          305    .bss.online_sbt46   tables.o
    0xf00016cc        -       0x00000004   Zero   RW          306    .bss.online_sbt47   tables.o
    0xf00016d0        -       0x00000004   Zero   RW          307    .bss.online_sbt48   tables.o
    0xf00016d4        -       0x00000004   Zero   RW          308    .bss.online_sbt49   tables.o
    0xf00016d8        -       0x00000004   Zero   RW          264    .bss.online_sbt5    tables.o
    0xf00016dc        -       0x00000004   Zero   RW          309    .bss.online_sbt50   tables.o
    0xf00016e0        -       0x00000004   Zero   RW          310    .bss.online_sbt51   tables.o
    0xf00016e4        -       0x00000004   Zero   RW          311    .bss.online_sbt52   tables.o
    0xf00016e8        -       0x00000004   Zero   RW          312    .bss.online_sbt53   tables.o
    0xf00016ec        -       0x00000004   Zero   RW          313    .bss.online_sbt54   tables.o
    0xf00016f0        -       0x00000004   Zero   RW          314    .bss.online_sbt55   tables.o
    0xf00016f4        -       0x00000004   Zero   RW          315    .bss.online_sbt56   tables.o
    0xf00016f8        -       0x00000004   Zero   RW          316    .bss.online_sbt57   tables.o
    0xf00016fc        -       0x00000004   Zero   RW          317    .bss.online_sbt58   tables.o
    0xf0001700        -       0x00000004   Zero   RW          318    .bss.online_sbt59   tables.o
    0xf0001704        -       0x00000004   Zero   RW          265    .bss.online_sbt6    tables.o
    0xf0001708        -       0x00000004   Zero   RW          319    .bss.online_sbt60   tables.o
    0xf000170c        -       0x00000004   Zero   RW          320    .bss.online_sbt61   tables.o
    0xf0001710        -       0x00000004   Zero   RW          321    .bss.online_sbt62   tables.o
    0xf0001714        -       0x00000004   Zero   RW          322    .bss.online_sbt63   tables.o
    0xf0001718        -       0x00000004   Zero   RW          323    .bss.online_sbt64   tables.o
    0xf000171c        -       0x00000004   Zero   RW          324    .bss.online_sbt65   tables.o
    0xf0001720        -       0x00000004   Zero   RW          325    .bss.online_sbt66   tables.o
    0xf0001724        -       0x00000004   Zero   RW          326    .bss.online_sbt67   tables.o
    0xf0001728        -       0x00000004   Zero   RW          266    .bss.online_sbt7    tables.o
    0xf000172c        -       0x00000004   Zero   RW          267    .bss.online_sbt8    tables.o
    0xf0001730        -       0x00000004   Zero   RW          268    .bss.online_sbt9    tables.o
    0xf0001734        -       0x00000004   Zero   RW          100    .bss.online_sbttest  tables.o
    0xf0001738        -       0x00000004   Zero   RW          238    .bss.online_sby1    tables.o
    0xf000173c        -       0x00000004   Zero   RW          247    .bss.online_sby10   tables.o
    0xf0001740        -       0x00000004   Zero   RW          248    .bss.online_sby11   tables.o
    0xf0001744        -       0x00000004   Zero   RW          249    .bss.online_sby12   tables.o
    0xf0001748        -       0x00000004   Zero   RW          250    .bss.online_sby13   tables.o
    0xf000174c        -       0x00000004   Zero   RW          251    .bss.online_sby14   tables.o
    0xf0001750        -       0x00000004   Zero   RW          252    .bss.online_sby15   tables.o
    0xf0001754        -       0x00000004   Zero   RW          253    .bss.online_sby16   tables.o
    0xf0001758        -       0x00000004   Zero   RW          254    .bss.online_sby17   tables.o
    0xf000175c        -       0x00000004   Zero   RW          255    .bss.online_sby18   tables.o
    0xf0001760        -       0x00000004   Zero   RW          256    .bss.online_sby19   tables.o
    0xf0001764        -       0x00000004   Zero   RW          239    .bss.online_sby2    tables.o
    0xf0001768        -       0x00000004   Zero   RW          257    .bss.online_sby20   tables.o
    0xf000176c        -       0x00000004   Zero   RW          258    .bss.online_sby21   tables.o
    0xf0001770        -       0x00000004   Zero   RW          240    .bss.online_sby3    tables.o
    0xf0001774        -       0x00000004   Zero   RW          241    .bss.online_sby4    tables.o
    0xf0001778        -       0x00000004   Zero   RW          242    .bss.online_sby5    tables.o
    0xf000177c        -       0x00000004   Zero   RW          243    .bss.online_sby6    tables.o
    0xf0001780        -       0x00000004   Zero   RW          244    .bss.online_sby7    tables.o
    0xf0001784        -       0x00000004   Zero   RW          245    .bss.online_sby8    tables.o
    0xf0001788        -       0x00000004   Zero   RW          246    .bss.online_sby9    tables.o
    0xf000178c        -       0x00000004   Zero   RW          336    .bss.online_sbz0    tables.o
    0xf0001790        -       0x00000004   Zero   RW          337    .bss.online_sbz1    tables.o
    0xf0001794        -       0x00000004   Zero   RW          346    .bss.online_sbz10   tables.o
    0xf0001798        -       0x00000004   Zero   RW          347    .bss.online_sbz11   tables.o
    0xf000179c        -       0x00000004   Zero   RW          348    .bss.online_sbz12   tables.o
    0xf00017a0        -       0x00000004   Zero   RW          349    .bss.online_sbz13   tables.o
    0xf00017a4        -       0x00000004   Zero   RW          350    .bss.online_sbz14   tables.o
    0xf00017a8        -       0x00000004   Zero   RW          351    .bss.online_sbz15   tables.o
    0xf00017ac        -       0x00000004   Zero   RW          352    .bss.online_sbz16   tables.o
    0xf00017b0        -       0x00000004   Zero   RW          353    .bss.online_sbz17   tables.o
    0xf00017b4        -       0x00000004   Zero   RW          338    .bss.online_sbz2    tables.o
    0xf00017b8        -       0x00000004   Zero   RW          339    .bss.online_sbz3    tables.o
    0xf00017bc        -       0x00000004   Zero   RW          340    .bss.online_sbz4    tables.o
    0xf00017c0        -       0x00000004   Zero   RW          341    .bss.online_sbz5    tables.o
    0xf00017c4        -       0x00000004   Zero   RW          342    .bss.online_sbz6    tables.o
    0xf00017c8        -       0x00000004   Zero   RW          344    .bss.online_sbz7    tables.o
    0xf00017cc        -       0x00000004   Zero   RW          343    .bss.online_sbz8    tables.o
    0xf00017d0        -       0x00000004   Zero   RW          345    .bss.online_sbz9    tables.o
    0xf00017d4   COMPRESSED   0x00000004   PAD
    0xf00017d8        -       0x00001040   Zero   RW         1154    .bss.os             rtx_lib.o
    0xf0002818        -       0x00000034   Zero   RW         1165    .bss.os.msgqueue.cb  rtx_lib.o
    0xf000284c        -       0x00000050   Zero   RW         1166    .bss.os.msgqueue.mem  rtx_lib.o
    0xf000289c        -       0x00000088   Zero   RW         1162    .bss.os.thread.cb   rtx_lib.o
    0xf0002924   COMPRESSED   0x00000004   PAD
    0xf0002928        -       0x00000200   Zero   RW         1163    .bss.os.thread.idle.stack  rtx_lib.o
    0xf0002b28        -       0x00000200   Zero   RW         1164    .bss.os.thread.timer.stack  rtx_lib.o
    0xf0002d28        -       0x00000008   Zero   RW           97    .bss.sband0trtest   tables.o
    0xf0002d30        -       0x00000008   Zero   RW          463    .bss.sband10tr      tables.o
    0xf0002d38        -       0x00000008   Zero   RW          466    .bss.sband11tr      tables.o
    0xf0002d40        -       0x00000008   Zero   RW          469    .bss.sband12tr      tables.o
    0xf0002d48        -       0x00000008   Zero   RW          472    .bss.sband13tr      tables.o
    0xf0002d50        -       0x00000008   Zero   RW          475    .bss.sband14tr      tables.o
    0xf0002d58        -       0x00000008   Zero   RW          478    .bss.sband15tr      tables.o
    0xf0002d60        -       0x00000008   Zero   RW          481    .bss.sband16tr      tables.o
    0xf0002d68        -       0x00000008   Zero   RW          484    .bss.sband17tr      tables.o
    0xf0002d70        -       0x00000008   Zero   RW          487    .bss.sband18tr      tables.o
    0xf0002d78        -       0x00000008   Zero   RW          490    .bss.sband19tr      tables.o
    0xf0002d80        -       0x00000008   Zero   RW          436    .bss.sband1tr       tables.o
    0xf0002d88        -       0x00000008   Zero   RW          493    .bss.sband20tr      tables.o
    0xf0002d90        -       0x00000008   Zero   RW          496    .bss.sband21tr      tables.o
    0xf0002d98        -       0x00000008   Zero   RW          499    .bss.sband22tr      tables.o
    0xf0002da0        -       0x00000008   Zero   RW          502    .bss.sband23tr      tables.o
    0xf0002da8        -       0x00000008   Zero   RW          505    .bss.sband24tr      tables.o
    0xf0002db0        -       0x00000008   Zero   RW          508    .bss.sband25tr      tables.o
    0xf0002db8        -       0x00000008   Zero   RW          511    .bss.sband26tr      tables.o
    0xf0002dc0        -       0x00000008   Zero   RW          514    .bss.sband27tr      tables.o
    0xf0002dc8        -       0x00000008   Zero   RW          517    .bss.sband28tr      tables.o
    0xf0002dd0        -       0x00000008   Zero   RW          520    .bss.sband29tr      tables.o
    0xf0002dd8        -       0x00000008   Zero   RW          439    .bss.sband2tr       tables.o
    0xf0002de0        -       0x00000008   Zero   RW          523    .bss.sband30tr      tables.o
    0xf0002de8        -       0x00000008   Zero   RW          526    .bss.sband31tr      tables.o
    0xf0002df0        -       0x00000008   Zero   RW          529    .bss.sband32tr      tables.o
    0xf0002df8        -       0x00000008   Zero   RW          442    .bss.sband3tr       tables.o
    0xf0002e00        -       0x00000008   Zero   RW          445    .bss.sband4tr       tables.o
    0xf0002e08        -       0x00000008   Zero   RW          448    .bss.sband5tr       tables.o
    0xf0002e10        -       0x00000008   Zero   RW          451    .bss.sband6tr       tables.o
    0xf0002e18        -       0x00000008   Zero   RW          454    .bss.sband7tr       tables.o
    0xf0002e20        -       0x00000008   Zero   RW          457    .bss.sband8tr       tables.o
    0xf0002e28        -       0x00000008   Zero   RW          460    .bss.sband9tr       tables.o
    0xf0002e30        -       0x00000008   Zero   RW          135    .bss.sbt0           tables.o
    0xf0002e38        -       0x00000008   Zero   RW          136    .bss.sbt1           tables.o
    0xf0002e40        -       0x00000008   Zero   RW          145    .bss.sbt10          tables.o
    0xf0002e48        -       0x00000008   Zero   RW          146    .bss.sbt11          tables.o
    0xf0002e50        -       0x00000008   Zero   RW          147    .bss.sbt12          tables.o
    0xf0002e58        -       0x00000008   Zero   RW          148    .bss.sbt13          tables.o
    0xf0002e60        -       0x00000008   Zero   RW          149    .bss.sbt14          tables.o
    0xf0002e68        -       0x00000008   Zero   RW          150    .bss.sbt15          tables.o
    0xf0002e70        -       0x00000008   Zero   RW          151    .bss.sbt16          tables.o
    0xf0002e78        -       0x00000008   Zero   RW          152    .bss.sbt17          tables.o
    0xf0002e80        -       0x00000008   Zero   RW          153    .bss.sbt18          tables.o
    0xf0002e88        -       0x00000008   Zero   RW          154    .bss.sbt19          tables.o
    0xf0002e90        -       0x00000008   Zero   RW          137    .bss.sbt2           tables.o
    0xf0002e98        -       0x00000008   Zero   RW          155    .bss.sbt20          tables.o
    0xf0002ea0        -       0x00000008   Zero   RW          156    .bss.sbt21          tables.o
    0xf0002ea8        -       0x00000008   Zero   RW          157    .bss.sbt22          tables.o
    0xf0002eb0        -       0x00000008   Zero   RW          158    .bss.sbt23          tables.o
    0xf0002eb8        -       0x00000008   Zero   RW          159    .bss.sbt24          tables.o
    0xf0002ec0        -       0x00000008   Zero   RW          160    .bss.sbt25          tables.o
    0xf0002ec8        -       0x00000008   Zero   RW          161    .bss.sbt26          tables.o
    0xf0002ed0        -       0x00000008   Zero   RW          162    .bss.sbt27          tables.o
    0xf0002ed8        -       0x00000008   Zero   RW          163    .bss.sbt28          tables.o
    0xf0002ee0        -       0x00000008   Zero   RW          164    .bss.sbt29          tables.o
    0xf0002ee8        -       0x00000008   Zero   RW          138    .bss.sbt3           tables.o
    0xf0002ef0        -       0x00000008   Zero   RW          165    .bss.sbt30          tables.o
    0xf0002ef8        -       0x00000008   Zero   RW          166    .bss.sbt31          tables.o
    0xf0002f00        -       0x00000008   Zero   RW          167    .bss.sbt32          tables.o
    0xf0002f08        -       0x00000008   Zero   RW          168    .bss.sbt33          tables.o
    0xf0002f10        -       0x00000008   Zero   RW          169    .bss.sbt34          tables.o
    0xf0002f18        -       0x00000008   Zero   RW          170    .bss.sbt35          tables.o
    0xf0002f20        -       0x00000008   Zero   RW          171    .bss.sbt36          tables.o
    0xf0002f28        -       0x00000008   Zero   RW          172    .bss.sbt37          tables.o
    0xf0002f30        -       0x00000008   Zero   RW          173    .bss.sbt38          tables.o
    0xf0002f38        -       0x00000008   Zero   RW          174    .bss.sbt39          tables.o
    0xf0002f40        -       0x00000008   Zero   RW          139    .bss.sbt4           tables.o
    0xf0002f48        -       0x00000008   Zero   RW          175    .bss.sbt40          tables.o
    0xf0002f50        -       0x00000008   Zero   RW          176    .bss.sbt41          tables.o
    0xf0002f58        -       0x00000008   Zero   RW          177    .bss.sbt42          tables.o
    0xf0002f60        -       0x00000008   Zero   RW          178    .bss.sbt43          tables.o
    0xf0002f68        -       0x00000008   Zero   RW          179    .bss.sbt44          tables.o
    0xf0002f70        -       0x00000008   Zero   RW          180    .bss.sbt45          tables.o
    0xf0002f78        -       0x00000008   Zero   RW          181    .bss.sbt46          tables.o
    0xf0002f80        -       0x00000008   Zero   RW          182    .bss.sbt47          tables.o
    0xf0002f88        -       0x00000008   Zero   RW          183    .bss.sbt48          tables.o
    0xf0002f90        -       0x00000008   Zero   RW          184    .bss.sbt49          tables.o
    0xf0002f98        -       0x00000008   Zero   RW          140    .bss.sbt5           tables.o
    0xf0002fa0        -       0x00000008   Zero   RW          185    .bss.sbt50          tables.o
    0xf0002fa8        -       0x00000008   Zero   RW          186    .bss.sbt51          tables.o
    0xf0002fb0        -       0x00000008   Zero   RW          187    .bss.sbt52          tables.o
    0xf0002fb8        -       0x00000008   Zero   RW          188    .bss.sbt53          tables.o
    0xf0002fc0        -       0x00000008   Zero   RW          189    .bss.sbt54          tables.o
    0xf0002fc8        -       0x00000008   Zero   RW          190    .bss.sbt55          tables.o
    0xf0002fd0        -       0x00000008   Zero   RW          191    .bss.sbt56          tables.o
    0xf0002fd8        -       0x00000008   Zero   RW          192    .bss.sbt57          tables.o
    0xf0002fe0        -       0x00000008   Zero   RW          193    .bss.sbt58          tables.o
    0xf0002fe8        -       0x00000008   Zero   RW          194    .bss.sbt59          tables.o
    0xf0002ff0        -       0x00000008   Zero   RW          141    .bss.sbt6           tables.o
    0xf0002ff8        -       0x00000008   Zero   RW          195    .bss.sbt60          tables.o
    0xf0003000        -       0x00000008   Zero   RW          196    .bss.sbt61          tables.o
    0xf0003008        -       0x00000008   Zero   RW          197    .bss.sbt62          tables.o
    0xf0003010        -       0x00000008   Zero   RW          198    .bss.sbt63          tables.o
    0xf0003018        -       0x00000008   Zero   RW          199    .bss.sbt64          tables.o
    0xf0003020        -       0x00000008   Zero   RW          200    .bss.sbt65          tables.o
    0xf0003028        -       0x00000008   Zero   RW          201    .bss.sbt66          tables.o
    0xf0003030        -       0x00000008   Zero   RW          202    .bss.sbt67          tables.o
    0xf0003038        -       0x00000008   Zero   RW          142    .bss.sbt7           tables.o
    0xf0003040        -       0x00000008   Zero   RW          143    .bss.sbt8           tables.o
    0xf0003048        -       0x00000008   Zero   RW          144    .bss.sbt9           tables.o
    0xf0003050        -       0x00000008   Zero   RW           93    .bss.sbttest        tables.o
    0xf0003058        -       0x00000008   Zero   RW          114    .bss.sby1           tables.o
    0xf0003060        -       0x00000008   Zero   RW          123    .bss.sby10          tables.o
    0xf0003068        -       0x00000008   Zero   RW          124    .bss.sby11          tables.o
    0xf0003070        -       0x00000008   Zero   RW          125    .bss.sby12          tables.o
    0xf0003078        -       0x00000008   Zero   RW          126    .bss.sby13          tables.o
    0xf0003080        -       0x00000008   Zero   RW          127    .bss.sby14          tables.o
    0xf0003088        -       0x00000008   Zero   RW          128    .bss.sby15          tables.o
    0xf0003090        -       0x00000008   Zero   RW          129    .bss.sby16          tables.o
    0xf0003098        -       0x00000008   Zero   RW          130    .bss.sby17          tables.o
    0xf00030a0        -       0x00000008   Zero   RW          131    .bss.sby18          tables.o
    0xf00030a8        -       0x00000008   Zero   RW          132    .bss.sby19          tables.o
    0xf00030b0        -       0x00000008   Zero   RW          115    .bss.sby2           tables.o
    0xf00030b8        -       0x00000008   Zero   RW          133    .bss.sby20          tables.o
    0xf00030c0        -       0x00000008   Zero   RW          134    .bss.sby21          tables.o
    0xf00030c8        -       0x00000008   Zero   RW          116    .bss.sby3           tables.o
    0xf00030d0        -       0x00000008   Zero   RW          117    .bss.sby4           tables.o
    0xf00030d8        -       0x00000008   Zero   RW          118    .bss.sby5           tables.o
    0xf00030e0        -       0x00000008   Zero   RW          119    .bss.sby6           tables.o
    0xf00030e8        -       0x00000008   Zero   RW          120    .bss.sby7           tables.o
    0xf00030f0        -       0x00000008   Zero   RW          121    .bss.sby8           tables.o
    0xf00030f8        -       0x00000008   Zero   RW          122    .bss.sby9           tables.o
    0xf0003100        -       0x00000008   Zero   RW          211    .bss.sbz0           tables.o
    0xf0003108        -       0x00000008   Zero   RW          212    .bss.sbz1           tables.o
    0xf0003110        -       0x00000008   Zero   RW          221    .bss.sbz10          tables.o
    0xf0003118        -       0x00000008   Zero   RW          222    .bss.sbz11          tables.o
    0xf0003120        -       0x00000008   Zero   RW          223    .bss.sbz12          tables.o
    0xf0003128        -       0x00000008   Zero   RW          224    .bss.sbz13          tables.o
    0xf0003130        -       0x00000008   Zero   RW          225    .bss.sbz14          tables.o
    0xf0003138        -       0x00000008   Zero   RW          226    .bss.sbz15          tables.o
    0xf0003140        -       0x00000008   Zero   RW          227    .bss.sbz16          tables.o
    0xf0003148        -       0x00000008   Zero   RW          228    .bss.sbz17          tables.o
    0xf0003150        -       0x00000008   Zero   RW          213    .bss.sbz2           tables.o
    0xf0003158        -       0x00000008   Zero   RW          214    .bss.sbz3           tables.o
    0xf0003160        -       0x00000008   Zero   RW          215    .bss.sbz4           tables.o
    0xf0003168        -       0x00000008   Zero   RW          216    .bss.sbz5           tables.o
    0xf0003170        -       0x00000008   Zero   RW          217    .bss.sbz6           tables.o
    0xf0003178        -       0x00000008   Zero   RW          219    .bss.sbz7           tables.o
    0xf0003180        -       0x00000008   Zero   RW          218    .bss.sbz8           tables.o
    0xf0003188        -       0x00000008   Zero   RW          220    .bss.sbz9           tables.o


    Execution Region ARM_LIB_HEAP (Exec base: 0xf0003190, Load base: 0x00009980, Size: 0x00000c00, Max: 0x00000c00, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0xf0003190        -       0x00000c00   Zero   RW            1    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Exec base: 0xf00efe00, Load base: 0x00009980, Size: 0x00000200, Max: 0x00000200, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0xf00efe00        -       0x00000200   Zero   RW            2    ARM_LIB_STACK.bss   anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      5420          0         10          0          0      14754   aes.o
     21450       3596          0          0          0       5260   asm.o
      1108          0         24          0       1190       8674   eventrecorder.o
       188         12          0          0          0        723   irq_armv7m.o
        84          0          0         16         16        889   main.o
        74          0          0          0          0       3186   os_systick.o
        46          6          0          0          0        685   rtx_config.o
       920          0          0          0          0      27490   rtx_evr.o
       336          0         11        164          0      14414   rtx_kernel.o
         0          0        268          0       5452       5947   rtx_lib.o
       560          0          0          0          0       2340   rtx_memory.o
       478          0          0          0          0      12253   rtx_mempool.o
      2900          0          0          0          0      14835   rtx_msgqueue.o
       172          0          0          0          0       8843   rtx_mutex.o
       940         10          0          0          0       6149   rtx_system.o
      1786          0          0          0          0      26494   rtx_thread.o
       548          0          0          0          0       8850   rtx_timer.o
        16          0        960          0          0        837   startup_armcm4.o
        38          0          0          4          0       1358   system_armcm4.o
         0          0          0       4216       1560      16896   tables.o

    ----------------------------------------------------------------------
     37224       3624       1308       4400      11868     180877   Object Totals
         0          0         32          0       3584          0   (incl. Generated)
       160          0          3          0         66          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry4.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
        36         10          0          4          0        136   rand.o

    ----------------------------------------------------------------------
       268         38          0          4          0        380   Library Totals
        16         12          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       252         26          0          4          0        380   mc_w.l

    ----------------------------------------------------------------------
       268         38          0          4          0        380   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     37492       3662       1308       4404      11868     181189   Grand Totals
     37492       3662       1308        448      11868     181189   ELF Image Totals (compressed)
     37492       3662       1308        448          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                38800 (  37.89kB)
    Total RW  Size (RW Data + ZI Data)             16272 (  15.89kB)
    Total ROM Size (Code + RO Data + RW Data)      39248 (  38.33kB)

==============================================================================

